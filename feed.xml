<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xebia Blog</title>
    <description>Thoughts on latest technologies</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 27 Feb 2015 06:46:31 +0530</pubDate>
    <lastBuildDate>Fri, 27 Feb 2015 06:46:31 +0530</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Performance Testing Using Jmeter Part 2</title>
        <description>&lt;h1&gt;Performance Testing using JMeter (Part 2)- Login into a website&lt;/h1&gt;

&lt;p&gt;In this blog, I will explain steps needed to create a JMeter workflow for login into a website. I will also cover various components of a JMeter test plan components like &lt;strong&gt;HTTP Cookie Manager, Regular Expression Extractor and Response Assertions.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I will use http://en.wikipedia.org website for demonstrating the login workflow.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start with adding a new thread group and a new config element &lt;strong&gt;HTTP Request Defaults&lt;/strong&gt; with &lt;strong&gt;Server Name&lt;/strong&gt; as &lt;strong&gt;en.wikipedia.org&lt;/strong&gt; and &lt;strong&gt;Protocol&lt;/strong&gt; as &lt;strong&gt;https&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/Http_Request_Default.jpg&quot; alt=&quot;Add New HTTP Request Defaults&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now for accessing the Login Page, add a new &lt;strong&gt;Sampler&lt;/strong&gt; as &lt;strong&gt;Http Request&lt;/strong&gt; with &lt;strong&gt;Path&lt;/strong&gt; set as &lt;strong&gt;/w/index.php&lt;/strong&gt; and parameter &lt;strong&gt;title&lt;/strong&gt; with value &lt;strong&gt;Special:UserLogin&lt;/strong&gt; and parameter &lt;strong&gt;returnto&lt;/strong&gt; with value &lt;strong&gt;Main Page&lt;/strong&gt; .&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/login_page_Http_Request.jpg&quot; alt=&quot;Http Request for Login Page&quot;&gt;&lt;/p&gt;

&lt;p&gt;Make sure to check &lt;strong&gt;Encode&lt;/strong&gt; chekboxes, It will make sure that URL constructed by appending parameters is correct.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Now you will be wondering how to get these &lt;strong&gt;Path&lt;/strong&gt; and &lt;strong&gt;Parameter&lt;/strong&gt; values.
You can easily get these values using the &lt;strong&gt;Network traffic analyzer (Net)&lt;/strong&gt; provided by &lt;strong&gt;firebug&lt;/strong&gt; plugin of &lt;strong&gt;firefox&lt;/strong&gt; browser.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open firebug and open &lt;strong&gt;Net&lt;/strong&gt; tab.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on the &lt;strong&gt;Log in&lt;/strong&gt; link on Home page of &lt;strong&gt;https://en.wikipedia.org&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Monitor the API calls in the Net tab
&lt;img src=&quot;/img/JMeter/Login_Workflow/firebug_Login_Page.jpg&quot; alt=&quot;Http Request for Login Page&quot;&gt;&lt;/li&gt;
&lt;li&gt;Copy the URL and the parameters passed to the URL of the Get API for Login page and paste the same under the Http sampler of Login page in JMeter. The link in blue show the complete URL including all the parameters , that will be send by the browser to the webserver to access the login page.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Looking at the URL of &lt;strong&gt;GET API&lt;/strong&gt;, it can be easily identified that whatever is being specified after the question mark (&lt;strong&gt;?&lt;/strong&gt;) symbol are the parameters passed to the API call and whatever before the question mark (&lt;strong&gt;?&lt;/strong&gt;) symbol is the actual URL of the API.&lt;/p&gt;

&lt;p&gt;Also we can get the parameters of the API from the &lt;strong&gt;Params&lt;/strong&gt; tab, as shown above.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add a &lt;strong&gt;Response Assertion&lt;/strong&gt; by right clicking on &lt;strong&gt;Sampler (Login Page) -&amp;gt; Add -&amp;gt; Assertions -&amp;gt; Response Assertion&lt;/strong&gt; for verifying whether login page was open successfully or not.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/new_Response_Assertion.jpg&quot; alt=&quot;Http Request for Login Page&quot;&gt;&lt;/p&gt;

&lt;p&gt;Add assertions as shown below :-&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/response_assertion_Login_Page.jpg&quot; alt=&quot;Login Page Assertion Conditions&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add a listener by right clicking on &lt;strong&gt;Sampler (Login Page) -&amp;gt; Add -&amp;gt; Listener -&amp;gt; View Results Tree&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/new_tree_view_listener.jpg&quot; alt=&quot;Add New Login Page Tree View Listener&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run the test case and verify the &lt;strong&gt;Request&lt;/strong&gt; and &lt;strong&gt;Response&lt;/strong&gt; in the tree view listener&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Request&lt;/strong&gt; :-
  &lt;img src=&quot;/img/JMeter/Login_Workflow/login_page_tree_view_request.jpg&quot; alt=&quot;Login Page Tree View Listener - Verify Request&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Response&lt;/strong&gt; :-
&lt;img src=&quot;/img/JMeter/Login_Workflow/login_page_tree_view_response.jpg&quot; alt=&quot;Login Page Tree View Listener - Verify Response&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now for submission of Login form, add one more &lt;strong&gt;HTTP Request&lt;/strong&gt; sampler under the same thread group.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We know that, for submission of any form to the webserver, the web-browser will invoke the &lt;strong&gt;POST&lt;/strong&gt; request with specified paramaters.&lt;/p&gt;

&lt;p&gt;To get the parameters needed by the &lt;strong&gt;POST&lt;/strong&gt; request, use the same method of firebug&amp;#39;s Net plugin , as we used above to get the parameters for &lt;strong&gt;GET&lt;/strong&gt; request.&lt;/p&gt;

&lt;p&gt;Login to the website in firefox browser and get the &lt;strong&gt;API query&lt;/strong&gt; parameters from &lt;strong&gt;Params&lt;/strong&gt; tab and &lt;strong&gt;API POST Reqeust&lt;/strong&gt; parameters from &lt;strong&gt;Post&lt;/strong&gt; tab as shown below:-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Params&lt;/strong&gt; tab specifying query parameters of POST request for login :-
  &lt;img src=&quot;/img/JMeter/Login_Workflow/login_page_API_Query_Parameters.jpg&quot; alt=&quot;Login Page Post Request Query parameters&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Post&lt;/strong&gt; tab specifying post parameters of POST request for login :-&lt;br&gt;
  &lt;img src=&quot;/img/JMeter/Login_Workflow/login_page_API_Post_Parameters.jpg&quot; alt=&quot;Login Page Post Request POST parameters&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set the method of Http Request to &lt;strong&gt;POST&lt;/strong&gt; and  specify &lt;strong&gt;Path&lt;/strong&gt; as  URL API and the parameters  as shown below :-&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/login_submission_Parameters.jpg&quot; alt=&quot;Login Submission Http Request Parameters&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add a new &lt;strong&gt;Response Assertion&lt;/strong&gt; under the Http request sampler of &lt;strong&gt;Login form submission&lt;/strong&gt; and add the assertion criteria as below&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/after_login_assertion.jpg&quot; alt=&quot;Login Submission Assertions&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Add a new &lt;strong&gt;View Tree Listener&lt;/strong&gt; under the under the Http request sampler of Login form submission and run the test plan.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;But, when we run the program and verify the response, we found that its a failure&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/login_Failure_Due_to_Cookies.jpg&quot; alt=&quot;Login Failure due to cookies&quot;&gt;&lt;/p&gt;

&lt;p&gt;So, the response data clearly shows that the login was not successful and it can be due to disabled cookies.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;So, how to solve this problem. Just add a new config element &lt;strong&gt;HTTP Cookie Manager&lt;/strong&gt; under the thread group &lt;strong&gt;Login Threads&lt;/strong&gt; and again run the test plan.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/new_Cookie_manager.jpg&quot; alt=&quot;New Cookie Manager&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run the test again after making the changes. You will see that the test failed with an error message that &lt;strong&gt;there seems to be a problem with your login session.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/login_Failure_due_to_session.jpg&quot; alt=&quot;Login failure due to Session&quot;&gt;&lt;/p&gt;

&lt;p&gt;This clearly shows that there is a problem with the session that was established with webserver.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In the previous step of &lt;strong&gt;POST&lt;/strong&gt; request, we hard-coded the parameter &lt;strong&gt;wpLoginToken&lt;/strong&gt;, but in actual scenrio this session variable is sent by the webserver when we load the &lt;strong&gt;Login Page&lt;/strong&gt;. So, we need to create this parameter value dynamically at run time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To get the value of parameter &lt;strong&gt;wpLoginToken&lt;/strong&gt;, add a new &lt;strong&gt;Post Processor - Regular Expression Extractor&lt;/strong&gt; under sampler &lt;strong&gt;LoginPage&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/new_Regular_Expression_Extractor.jpg&quot; alt=&quot;Add new Regular Expression Extractor&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Populate following values in fields of &lt;strong&gt;Regular Expression Extractor&lt;/strong&gt; :-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reference Name : loginToken&lt;/li&gt;
&lt;li&gt;Regular Expression : value=&amp;quot;(.+?)&amp;quot; name=&amp;quot;wpLoginToken&amp;quot;&lt;/li&gt;
&lt;li&gt;Template : $1$&lt;/li&gt;
&lt;li&gt;Match no : 1&lt;/li&gt;
&lt;li&gt;Default Value : NOT_FOUND&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/login_Token_Regular_Expression_Details.jpg&quot; alt=&quot;Regular Expression field details&quot;&gt;&lt;/p&gt;

&lt;p&gt;Note :- The special characters above in Regular Expression are:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;( and ) - these enclose the portion of the match string to be returned

. - match any character

+ - one or more times

? - stop when first match succeeds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can validate the regular expression by using the &lt;strong&gt;Regular Expression Search&lt;/strong&gt; of &lt;strong&gt;Tree View&lt;/strong&gt; of Login Page.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/validating_Regular_Expression.jpg&quot; alt=&quot;Login failure due to Session&quot;&gt;&lt;/p&gt;

&lt;p&gt;Make sure that &lt;strong&gt;Regular Exp&lt;/strong&gt; checkbox is checked.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now update the parameter &lt;strong&gt;wpLoginToken&lt;/strong&gt; with the variable &lt;strong&gt;loginToken&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Login_Workflow/update_Parameter_for_Login_Session.jpg&quot; alt=&quot;Update parameter for Submit Login Post Request&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now run the test plan again and validate that login was successful to the website.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, using the above steps, we were successfully able to login to a website for a single user workflow. In the next blogs, I will cover, how we can get multiple user&amp;#39;s data from a &lt;strong&gt;csv&lt;/strong&gt; file and perform the login workflow for multiple user&amp;#39;s.&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Feb 2015 00:00:00 +0530</pubDate>
        <link>/2015/02/24/Performance-Testing-Using-JMeter-Part-2/</link>
        <guid isPermaLink="true">/2015/02/24/Performance-Testing-Using-JMeter-Part-2/</guid>
        
        <category>Testing</category>
        
        <category>Performance Testing</category>
        
        <category>JMeter</category>
        
        
      </item>
    
      <item>
        <title>Performance Testing Using Jmeter Part 1</title>
        <description>&lt;h1&gt;Performance Testing using JMeter (Part 1)- Start with Recording a Test Script&lt;/h1&gt;

&lt;p&gt;These days it is expected that every functional or non-functional automation tool should provide record and playback functionality so that testers can write tests that closely mimic a real user interaction with the system. JMeter is an open source, powerful load testing tool that provides functionality to record both HTTP and HTTPS requests..&lt;/p&gt;

&lt;p&gt;In this blog, I will explain all the steps you need to perform to record both http and https requests.&lt;/p&gt;

&lt;h2&gt;Browser Configurations: -&lt;/h2&gt;

&lt;p&gt;Before Starting with the recording process, we need to change some configuration settings of the browser. Here, I am explaining all those settings for &lt;strong&gt;Firefox&lt;/strong&gt; browser.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open Preferences for Firefox (using &lt;strong&gt;Firefox-&amp;gt;Preferences&lt;/strong&gt; on Mac and
&lt;strong&gt;Tools-&amp;gt;Options&lt;/strong&gt; on Windows)&lt;/li&gt;
&lt;li&gt;  Open Network Tab by clicking on &lt;strong&gt;Advanced-&amp;gt;Network&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Recording_Workflow/firefox_network.jpg&quot; alt=&quot;Firefox Network Settings&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Click on &lt;strong&gt;Settings&lt;/strong&gt; Button and update proxy setting to &lt;strong&gt;localhost: 8080&lt;/strong&gt;, as shown below: -&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Recording_Workflow/firefox_network_settings.jpg&quot; alt=&quot;HTTP Proxy Settings&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Click &lt;strong&gt;OK&lt;/strong&gt; Button to save all Settings.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;JMeter Configurations: -&lt;/h2&gt;

&lt;p&gt;Now that we are done with the configuration settings for Internet proxy, we will proceed with JMeter steps.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Add a new &lt;strong&gt;Thread Group&lt;/strong&gt; by right clicking on &lt;strong&gt;Test Plan -&amp;gt; Add -&amp;gt; Threads -&amp;gt; Threads Group&lt;/strong&gt;, as shown below: -&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Recording_Workflow/New_ThreadGroup.jpg&quot; alt=&quot;Add New Thread Group&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Add config element &lt;strong&gt;HTTP Request Defaults&lt;/strong&gt; by right clicking on
&lt;strong&gt;Thread Group -&amp;gt; Config element -&amp;gt; HTTP Request Defaults&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Recording_Workflow/New_Http_Request_Default.jpg&quot; alt=&quot;Add New HTTP Request Defaults&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Specify the &lt;strong&gt;Server Name&lt;/strong&gt; (website host name) or &lt;strong&gt;IP&lt;/strong&gt; of the server for which you want to record Http requests&lt;/li&gt;
&lt;li&gt;  In the Path specify the relative path of the webpage for which you want to record Http request. If it’s the home page of the , just specify &lt;strong&gt;slash(/)&lt;/strong&gt; in the path, as shown below:-&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Recording_Workflow/Http_Request_Default_Settings.jpg&quot; alt=&quot;Path Settings for Home Page&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Add &lt;strong&gt;Recording Controller&lt;/strong&gt; by right clicking on &lt;strong&gt;Thread Group -&amp;gt; Add -&amp;gt; Logic Controller -&amp;gt; Recording Controller&lt;/strong&gt; as shown below :-&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Recording_Workflow/New_Recording_Controller.jpg&quot; alt=&quot;Add New Recording Controller&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Add &lt;strong&gt;HTTP Test Script Recorder&lt;/strong&gt; by right clicking on &lt;strong&gt;WorkBench - &amp;gt; Add -&amp;gt; Non Test Elements -&amp;gt; HTTP(S) Test Script Recorder&lt;/strong&gt; as shown below :-&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Recording_Workflow/New_Http_Test_Script_Recorder.jpg&quot; alt=&quot;Add New HTTP(S) Test Script Recorder&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you just want to record HTTP requests for HTML pages, then

&lt;ul&gt;
&lt;li&gt;Click  &lt;strong&gt;Add suggested Excludes&lt;/strong&gt; on &lt;strong&gt;HTTP(S) Test Script Recorder&lt;/strong&gt; panel. This will add the URL patterns that we want to exclude from recording.
&amp;gt; OR&lt;/li&gt;
&lt;li&gt;Click on &lt;strong&gt;Add&lt;/strong&gt; Button on &lt;strong&gt;URL Patterns to Include&lt;/strong&gt; section and type &lt;strong&gt;.*\.html&lt;/strong&gt;. This specifies that only HTML samplers should be recorded.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Recording_Workflow/Http_Test_Script_Recorder_Settings.jpg&quot; alt=&quot;Patterns to include and exclude from Recording&quot;&gt;&lt;/p&gt;

&lt;p&gt;And now you are ready with all the needed configurations to start recording.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Click on the &lt;strong&gt;Start&lt;/strong&gt; Button on &lt;strong&gt;HTTP(S) Test Script Recorder&lt;/strong&gt; panel. But what, instead of starting recording, JMeter shows a pop-up regarding creation of a certificate as shown below: -&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Recording_Workflow/security_Certificate_Recording.jpg&quot; alt=&quot;JMeter Security Certificate&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Actually, all HTTPS connections use certificates to authenticate the connection between the browser and the web server. When the communication protocol is &lt;strong&gt;HTTPS&lt;/strong&gt;, the web-server presents the security certificate to the browser. To authenticate this certificate, the browser checks whether the server certificate is signed by a Certificate Authority (CA) or not.&lt;/li&gt;
&lt;li&gt;For versions of JMeter from 2.10 onwards, JMeter generates its own certificate(s), which can be imported in the browser to enable the trust between proxy server and browser and also to enable recording of HTTPs requests.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When a pop-up as above for security certificate appears, it will create a file named &lt;strong&gt;“ApacheJMeterTemporaryRootCA.crt”&lt;/strong&gt; in bin directory of JMeter&lt;/p&gt;

&lt;p&gt;Now we need to install this certificate in the browser.&lt;/p&gt;

&lt;p&gt;We will perform the steps to import the security certificate in Firefox.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;From the &lt;strong&gt;“Certificates”&lt;/strong&gt; tab click on &lt;strong&gt;“View Certificates”&lt;/strong&gt; and import the certificate created in the above step as shown below: -&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Recording_Workflow/firefox_Install_Certificates.jpg&quot; alt=&quot;Importing Security Certificate in Firefox&quot;&gt;&lt;/p&gt;

&lt;p&gt;And now we are all set to start recording.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Ideally, to start recording, use private browsing mode when recording the session. This should ensure that the browser starts with no stored cookies, and prevents certain changes from being saved.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So start firefox in &lt;strong&gt;Private Browsing&lt;/strong&gt; mode with url as http://jmeter.apache.org/.&lt;/p&gt;

&lt;p&gt;Click on different links, which you want to record in your test plan.&lt;/p&gt;

&lt;p&gt;You will see that the links that you click in the browser, starts recording as &lt;strong&gt;“Http Request”&lt;/strong&gt; under the &lt;strong&gt;“Recording Controller”&lt;/strong&gt; as shown below :-&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/JMeter/Recording_Workflow/recorded_Http_Requests.jpg&quot; alt=&quot;Recorded Http Samplers&quot;&gt;&lt;/p&gt;

&lt;p&gt;Now, you can use these Http samplers with other components of JMeter to create your full-fledged test plans.&lt;/p&gt;

&lt;p&gt;So, we are done with first step of JMeter, where we are having all the needed Http Requests ready.&lt;/p&gt;

&lt;p&gt;We will discuss about using these Https requests and their collaboration with other JMeter components in further series of blogs.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Feb 2015 00:00:00 +0530</pubDate>
        <link>/2015/02/16/Performance-Testing-Using-JMeter-Part-1/</link>
        <guid isPermaLink="true">/2015/02/16/Performance-Testing-Using-JMeter-Part-1/</guid>
        
        <category>Testing</category>
        
        <category>Performance Testing</category>
        
        <category>JMeter</category>
        
        
      </item>
    
      <item>
        <title>Playing With Alfresco Repository Using Cmis</title>
        <description>&lt;h1&gt;Playing with Alfresco repository using CMIS&lt;/h1&gt;

&lt;p&gt;Before starting with this blog we need to know only one thing why we are using alfresco with CMIS for content access.&lt;/p&gt;

&lt;h1&gt;Table of Content :&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#what-is-alfresco&quot;&gt;What is alfresco and why we are using it?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#what-is-cmis&quot;&gt;What is CMIS why we are using it with alfresco?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#type-of-cmis-binding-in-alfresco&quot;&gt;Type of CMIS binding in Alfresco :&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#getting-repository-id-and-cmis-atom-pub-URL&quot;&gt;Get alfresco CMIS repository ID and CMIS Atom Pub binding URL :&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#getting-repository-id&quot;&gt;Getting repository ID for alfresco installation.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#cmis-binding-url&quot;&gt;Alfresco CMIS AtomPub binding URL.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#how-to-create-session&quot;&gt;How to create create session using Apache CMIS and Alfresco open CMIS ?&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#create-apache-cmis-session&quot;&gt;Creating apache CMIS session :&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#create-alfresco-cmis-session&quot;&gt;Creating Alfresco Cmis session :&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#use-ticket-instead-of-username-and-password&quot;&gt;Use login Ticket instead of username and password :&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#simple-and-complex-file-operation&quot;&gt;Simple and Complex File operations?&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#type-of-file-object&quot;&gt;Type of file Objects in Alfresco using CMIS approach&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#document-object&quot;&gt;Document Object.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#alfrescodocument-object&quot;&gt;AlfrescoDocument Object.&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#create-alfresco-cmis-session&quot;&gt;Create New Document :&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#getting-existing-document&quot;&gt;Getting existing document :&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#update-document&quot;&gt;Update document :&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#delete-old-file&quot;&gt;Delete old file :&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#update-document&quot;&gt;Folder Operations in Alfresco :&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#type-of-folder-object&quot;&gt;Type of Folder Objects in Alfresco using CMIS approach&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#folder-object&quot;&gt;Folder Object.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#alfrescofolder-object&quot;&gt;AlfrescoFolder Object.&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;What is alfresco and why we are using it? &lt;a id=&quot;what-is-alfresco&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Alfresco means Open Air. Alfresco is the one of the most popular Open Source Content Management Platform. Alfresco gain its popularity from 2005 on-wards.
Alfresco can be used for the wide variety of operation like
+ Record Management
+ Content Management or Document Management
+ For Version control repository
+ For simple and complex business process management
+ For digitization of documents
+ For mail room automation
+ For collaboration
+ Access control management system
 many more....
Its all our choice how and where we are use Alfresco for our usability.&lt;/p&gt;

&lt;h2&gt;What is CMIS why we are using it with alfresco? &lt;a id=&quot;what-is-cmis&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;CMIS stands for Content Management Interoperability Services. CMIS is used when we want to access different content repository that follows CMIS standard within one complete system written on top of them or when we want different content repository follows CMIS standard to interact or exchange there data with each others permission. CMIS is the open standard its not given by Alfresco community its given by OASIS for accessing content repository. We will start how to use Apache Chemistry and Alfresco Open CMIS for respective operation:&lt;/p&gt;

&lt;p&gt;One most important thing before starting with CMIS in alfresco you should use apache CMIS library along with alfresco open cmis library. But its not necessary if you are not dealing with alfresco session and objects.&lt;/p&gt;

&lt;h2&gt;Type of CMIS binding in Alfresco : &lt;a id=&quot;type-of-cmis-binding-in-alfresco&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;There are three type of CMIS binding which alfresco support:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CMIS Web Services binding.&lt;/li&gt;
&lt;li&gt;CMIS AtomPub binding.&lt;/li&gt;
&lt;li&gt;CMIS Local binding.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are using CMIS AtomPub binding in this case  we can use other also the only difference is in how we create session in each case else all operation are same. Lets start coding...........&lt;/p&gt;

&lt;h2&gt;Get alfresco CMIS repository ID and CMIS Atom Pub binding URL : &lt;a id=&quot;getting-repository-id-and-cmis-atom-pub-URL&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Below is how we can get Alfresco repository ID and atom pub binding URL&lt;/p&gt;

&lt;h2&gt;Getting repository ID for alfresco installation. &lt;a id=&quot;getting-repository-id&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;** For Getting repository ID for alfresco installation follow following steps :**&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hit URL for alfresco installation http://{server}:{post}/alfresco/service/cmis.&lt;/li&gt;
&lt;li&gt;Enter your admin user name and password in login popup.&lt;/li&gt;
&lt;li&gt;If user have appropriate permission New file xml is downloaded with name cmis.&lt;/li&gt;
&lt;li&gt;Open file and get CMIS repository ID in &lt;a href=&quot;cmisra:repositoryInfo&quot;&gt;cmisra:repositoryInfo&lt;/a&gt; between &lt;a href=&quot;cmis:repositoryId&quot;&gt;cmis:repositoryId&lt;/a&gt; tags.&lt;/li&gt;
&lt;li&gt;In my case it is 6fc907f9-6790-46b5-9c25-d6855ff8ff5c.
CMIS atom pub URL is same following URL pattern :&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Alfresco CMIS AtomPub binding URL. &lt;a id=&quot;cmis-binding-url&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;http://{server}:{port}/alfresco/service/cmis&lt;/p&gt;

&lt;h2&gt;How to create create session using Apache CMIS and Alfresco open CMIS ? &lt;a id=&quot;how-to-create-session&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The main reason for creating alfresco session as we can&amp;#39;t user things or standard in alfresco that are not related to CMIS using simple CMIS session like aspects can&amp;#39;t be used using simple CMIS session.&lt;/p&gt;

&lt;h2&gt;Creating apache CMIS session :&lt;a id=&quot;create-apache-cmis-session&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// default factory implementation&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SessionFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SessionFactoryImpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// map to contain connection parameter any cmis repository using atom pub&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ATOMPUB_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://localhost:9090/alfresco/service/cmis&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BINDING_TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BindingType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ATOMPUB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;REPOSITORY_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;6fc907f9-6790-46b5-9c25-d6855ff8ff5c&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// getting Instance from User Credential&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// create session&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Creating Alfresco Cmis session :&lt;a id=&quot;create-alfresco-cmis-session&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// default factory implementation&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SessionFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SessionFactoryImpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// map to contain connection parameter for Alfresco repository using AtomPub Map&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ATOMPUB_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://localhost:9090/alfresco/service/cmis&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BINDING_TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BindingType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ATOMPUB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;REPOSITORY_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;6fc907f9-6790-46b5-9c25-d6855ff8ff5c&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OBJECT_FACTORY_CLASS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;org.alfresco.cmis.client.impl.AlfrescoObjectFactoryImpl&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// getting Instance from User Credential&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// create session Session session = factory.createSession(parameter);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Use login Ticket instead of username and password :&lt;a id=&quot;use-ticket-instead-of-username-and-password&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;username :  ROLE&lt;em&gt;TICKET
password : {USER&lt;/em&gt;LOGIN_TICKET}&lt;/p&gt;

&lt;p&gt;You can get login ticket by using Alfresco login service http://{server}:{port}/alfresco/service/api/login?u={username}&amp;amp;pw={password?}&lt;/p&gt;

&lt;h2&gt;Simple and Complex File operations?&lt;a id=&quot;simple-and-complex-file-operation&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;There are many operation related to file or content we list some of the most rapidly used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create new document.&lt;/li&gt;
&lt;li&gt;Getting existing document.&lt;/li&gt;
&lt;li&gt;Update document.&lt;/li&gt;
&lt;li&gt;Delete old file.&lt;/li&gt;
&lt;li&gt;Create new document :&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Type of file Objects in Alfresco using CMIS approach.&lt;a id=&quot;type-of-file-object&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Document Object.
&lt;strong&gt;2.&lt;/strong&gt; AlfrescoDocument Object.&lt;/p&gt;

&lt;h2&gt;Document Object.&lt;a id=&quot;document-object&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This object is common in all CMIS approach whether it is alfresco or any other CMIS supported content repository. This Document object can&amp;#39;t be used for dealing alfresco related operations on Document Like :- aspects etc&lt;/p&gt;

&lt;h1&gt;AlfrescoDocument Object.&lt;a id=&quot;alfrescodocument-object&quot;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;This object is related to Alfresco content repository we have to explicity convert CMIS Document Object to AlfescoDocument object when dealing with alfresco related operation using Alfresco open CMIS extension JAR.&lt;/p&gt;

&lt;h2&gt;Create New Document :&lt;a id=&quot;create-alfresco-cmis-session&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; First we need to follow code for creating Alfresco session.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Create object for Alfresco folder or CMIS folder Object for storing document.&lt;/p&gt;

&lt;p&gt;Folder path could be any path within alfresco content repository for which user who is accessing it should have permission.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Folder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;retriveCMISFolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folderPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SuccessCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;UnauthorisedAccess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;NUll or empty Session Object&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;folderPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folderPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SuccessCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ApiError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;NUll or empty Folder Path&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;folderPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SuccessCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ApiError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Invalid folder path must start and end with /&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;OperationContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createOperationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setRenditionFilterString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cmis:thumbnail&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Folder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getObjectByPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;folderPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SuccessCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ApiError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Unable to created folder object with path = &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folderPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; Expected Cause =&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Create document in alfresco folder for which object is created in step 2.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Document&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createNewDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentDescription&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mimeType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Folder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;documentName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SuccessCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ApiError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Document name is mandatory&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;documentTitle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;documentTitle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;documentDescription&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentDescription&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;documentDescription&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oInputStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oInputStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreatePdfFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createPdfFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;documentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentDescription&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mimeType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mimeType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mimeType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;application/pdf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//trying to create new document&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Setting properties for new document to be created within repository&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PropertyIds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PropertyIds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OBJECT_TYPE_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;cmis:document,P:cm:titled&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:title&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:description&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentDescription&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Reading the content in Bytes stream and Writing it to new file in&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ContentStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contentStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ContentStreamImpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;documentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mimeType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// creating document with name title and description&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contentStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VersioningState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MAJOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SuccessCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ApiError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Unable to create document &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;. &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Getting existing document :&lt;a id=&quot;getting-existing-document&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;FileNode is the node Id of document which we have for all document in Alfresco. We have different node Id for each document in alfresco repository. For getting document node Id we can get all child document under any Folder in repository. There can be other way also to get document in Folder like using name etc.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AlfrescoDocument&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;retriveAlfrescoDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileNode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SuccessCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;UnauthorisedAccess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;NUll or empty Session Object&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileNode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SuccessCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ApiError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;NUll or empty file Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AlfrescoDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileNode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SuccessCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ApiError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;unable to convert cmis folder to alfresco folder = &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Update document :&lt;a id=&quot;update-document&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// getting Instance from User Credential&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//creating session we did it above&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// getting alfresco document&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AlfrescoDocument&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alfrescoDocument&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retriveAlfrescoDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// try to edit document description&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Map to contain document properties&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Utils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isBlank&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;documentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PropertyIds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PropertyIds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OBJECT_TYPE_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;cmis:document,P:cm:titled&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Utils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isBlank&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;documentTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:title&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Utils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isBlank&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;documentDescription&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:description&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documentDescription&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// updating document property&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CmisObject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updateDocument&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alfrescoDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;updateProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// return document properties&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;updateDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SuccessCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ApiError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;unable to edit document with name &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alfrescoDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Delete old file :&lt;a id=&quot;delete-old-file&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//creating new session object&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Create session we did it above&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//alfresco document object&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AlfrescoDocument&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alfrescoDocument&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retriveAlfrescoDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileNode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// try to delete document object&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// deleting File with given File ID from repository&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alfrescoDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//return property map for deleting document&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Document deleted successfully&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ServiceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SuccessCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ApiError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Unable to delete document with name &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So these are the file operation we can have in Alfresco there could be more.&lt;/p&gt;

&lt;h2&gt;Folder Operations in Alfresco?&lt;a id=&quot;folder-operations-in-alfresco&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;We can have two type of folder object in CMIS approach :&lt;/p&gt;

&lt;h2&gt;Type of folder Objects in Alfresco using CMIS approach.&lt;a id=&quot;type-of-folder-object&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Folder Object.
&lt;strong&gt;2.&lt;/strong&gt; AlfrescoFolder Object.&lt;/p&gt;

&lt;h2&gt;Folder Object.&lt;a id=&quot;folder-object&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This object is common in all CMIS approach whether it is alfresco or any other CMIS supported content repository. This folder object can&amp;#39;t be used for dealing alfresco related operations on folders Like :- aspects etc&lt;/p&gt;

&lt;h1&gt;AlfrescoFolder Object.&lt;a id=&quot;alfrescofolder-object&quot;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;This object is related to Alfresco content repository we have to explicitly convert CMIS Folder Object to AlfescoFolder object when dealing with alfresco related operation using Alfresco open CMIS extension JAR.&lt;/p&gt;

&lt;p&gt;For code on Alfresco Folder operations we are creating separate bog.&lt;/p&gt;

&lt;h2&gt;Full index and metadata search of document using CMIS?&lt;a id=&quot;full-index-metadata-search-in-alfresco&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;For working with alfresco document search visit our blog &lt;strong&gt;&lt;a href=&quot;http://blog.xebia.in/2014/11/20/alfresco-custom-field-search-in-cmis-approach/&quot;&gt;Alfresco custom field search in CMIS approach&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://blog.xebia.in/tag/alfresco/&quot;&gt;For more hacks about alfresco visit&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Feb 2015 00:00:00 +0530</pubDate>
        <link>/2015/02/12/playing-with-alfresco-repository-using-cmis/</link>
        <guid isPermaLink="true">/2015/02/12/playing-with-alfresco-repository-using-cmis/</guid>
        
        <category>alfesco</category>
        
        <category>CMIS operations</category>
        
        <category>CMIS file, folder and search operations</category>
        
        
      </item>
    
      <item>
        <title>Sql Over Hbase Using Apache Pheonix</title>
        <description>&lt;h1&gt;SQL over HBASE using Apache Phoenix&lt;/h1&gt;

&lt;p&gt;Hbase is a NoSQL column oriented database inspired from Google Big Table.. Since most of the queries related to analytics are more concentrated towards accessing all the queries in a table simultaneously, Hbase’s column oriented nature proves its worth in such cases.&lt;/p&gt;

&lt;p&gt;Hbase uses HDFS (Hadoop File System) to store its data.HDFS use helps Hbase to achieve features like scalability and fault tolerance out of the box.&lt;/p&gt;

&lt;p&gt;Hbase provides two features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Accessing the data in HDFS with a table approach.&lt;/li&gt;
&lt;li&gt;It provides transactiional behaviour to multi cluster setup.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information on Hbase, refer to :&lt;a href=&quot;http://xebee.xebia.in/index.php/2013/02/27/hbase-a-real-time-access-to-big-data/&quot;&gt;http://xebee.xebia.in/index.php/2013/02/27/hbase-a-real-time-access-to-big-data/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is long list  NoSql databases in market like Casaandra, MongoDb etc. For accessing the data residing in Cassandra, we have a SQL query like language CQL.The biggest advantage of using SQL is its widespread use since ages.BA and QA are quite use to writing SQL queries.&lt;/p&gt;

&lt;p&gt;That is the reason why CQL is quite famous among people who use Cassandra.For Hbase, we have few SQL drivers, which give a SQL type language to access data like - Apache Pheonix. Point to note here is that its just the SQL type language which is common, the way data is accessed in case of an RDBMS and Hbase or Cassandra is completely different.&lt;/p&gt;

&lt;p&gt;In this blog we are going to look at the way we can use Apache Phoenix to achieve SQL capabilities over Hbase.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Apache Phoenix?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Apache Phoenix provides an SQL driver over Hbase.Its a alternative client API which converts its SQL queries in Hbase calls i.e SQL into get,put and scan constructs of Hbase.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Phoenix-&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Give people an API they already know.&lt;/li&gt;
&lt;li&gt;Reducing the quantity of code.&lt;/li&gt;
&lt;li&gt;Optimized for fetching data- Provides facilities like- Aggregation,Skip scans etc&lt;/li&gt;
&lt;li&gt;It can use the existing tools- SQL client/terminal, OLAP engine&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Getting Started with Phoenix:-&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can download Apache Pheonix from the Apache Phoenix site( &lt;a href=&quot;http://phoenix.apache.org/download.html&quot;&gt;http://phoenix.apache.org/download.html&lt;/a&gt;) .There are many Phoenix versions available.Please read the Phoenix documentation before downloading Phoenix and make sure it is compatible with your currently used Hbase version.&lt;/p&gt;

&lt;p&gt;Once the Apache Phoenix is downloaded, unzip the tar file and you have to include the Phoenix jar files to Hbase region servers, so that we can establish a successful communication via Phoenix to Hbase.&lt;/p&gt;

&lt;p&gt;Note: If your Hbase is not compatible with Phoenix version, we will get an exception saying Client and Server jars are not compatible.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget http://apache.mirrors.hoobly.com/phoenix/phoenix-3.2.2/bin/phoenix-3.2.2-bin.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar -xvf phoenix-3.2.2-bin.tar.gz 
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;phoenix-3.2.2-bin/common
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cp phoenix-3.2.2-client-minimal.jar /usr/lib/hbase/lib/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cp phoenix-core-3.2.2.jar /usr/lib/hbase/lib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Phoenix comes up with a command line tool: sqlline (written in python).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/phoenix/phoenix-core-3.2.2/bin
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./psql.py localhost &amp;lt;sql-script A&amp;gt; &amp;lt;argument &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; the scrit A&amp;gt; &amp;lt;second-sql script B&amp;gt; &amp;lt;arguments forscript B&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;Script A:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;LOCATION&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOB&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;DATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEEID&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;INTEGER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEEID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguments for A:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Abhishek,Delhi,1984-01-01 01:01:01,1 Rakesh,Kolkata,1983-06-25 01:01:01,2 Jemin,Chennai,1990-11-25 01:01:01,3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Script B:&lt;/p&gt;

&lt;p&gt;Running Sample queries:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEEID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now using sqlline we can connect to Hbase:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./sqlline.py localhost &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;cloudera@localhost bin&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./sqlline.py localhost .. Connecting to jdbc:phoenix:localhost Driver: org.apache.phoenix.jdbc.PhoenixDriver &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;version 3.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Autocommit status: &lt;span class=&quot;nb&quot;&gt;true &lt;/span&gt;Transaction isolation: TRANSACTION_READ_COMMITTED .. Done sqlline version 1.1.2 0: jdbc:phoenix:localhost&amp;gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; count&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;*&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; from EMPLOYEE&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; +------------+ &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  COUNT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; +------------+ &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; +------------+ &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; row selected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.112 seconds&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0: jdbc:phoenix:localhost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Running Phoenix on AWS:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We can run Phoenix on AWS- EMR clusters.&lt;/p&gt;

&lt;p&gt;Step 1:Specify the Hadoop Version and choose Hbase in application to be installed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2015/01/1-300x113.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Step 2: Specify the following in the Bootstrap portion of Cluster configuration.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2015/01/2-300x93.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Once the cluster is running, you can login to the master node using ssh and check your Phoenix configuration.&lt;/p&gt;

&lt;p&gt;![](http://xebee.xebia.in/wp-content/uploads/2015/01/3-300x224.png&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Operations not supported in Apache Phoenix:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Relational operators like - UNION,INTERSECT and MINUS is not supported.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Transactional support- It does not support and additional transactional capabilities other than what Hbase provides.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can also integrate Squirrel - SQL plugin with Apache Phoenix as well.&lt;/p&gt;

&lt;p&gt;All we need to do is to add appropriate driver on Squirrel client window.Using this we can easily query the Hbase database we use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Phoenix is actually been used in places where we want to hit the Hbase database using REST calls and the result of these REST calls are actually to be seen on some UI.&lt;/p&gt;

&lt;p&gt;Widespread knowledge of SQL increases the usefulness of Phoenix and related tools like CQL (in case of Cassandra) and Phoenix(in case of Hbase)&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Jan 2015 00:00:00 +0530</pubDate>
        <link>/2015/01/02/sql-over-hbase-using-apache-pheonix/</link>
        <guid isPermaLink="true">/2015/01/02/sql-over-hbase-using-apache-pheonix/</guid>
        
        <category>nosql</category>
        
        <category>hbase</category>
        
        <category>phoenix</category>
        
        
      </item>
    
      <item>
        <title>Useful Guidelines For Contributing To A Project Managed Using Git</title>
        <description>&lt;h1&gt;Useful Guidelines for Contributing to a Project Managed Using GIT&lt;/h1&gt;

&lt;p&gt;GIT is a popular and powerful open source version control system. In many respects it is ideal VCS if you are working in project with medium to large team size. These are a couple of useful guidelines for you if you are contributing in a project using GIT as VCS:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Create a branch for each logical change you are doing:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For each logical change of yours like fixing a bug or creating a new feature avoid using master branch and rather create a new branch. This will save you from reverting your changes and rebasing your master in case your changes do not make to master branch of the main project repo. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Base the code you are contributing against suitable branch:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Base your change against suitable branch, for example a new feature should ideally be rebased against master branch. A bug fix generally on maintenance branch, if the bug is reported from code of some branch not yet merge into master, base your change against that branch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Do not commit white spaces:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Most annoying change in a file on git repo are blank space, they mostly creep in because of the IDE codestyle settings. You can check you files for blank spaces introduced prior to commit using the command:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;git diff –check&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Make separate commits for logically separate changes:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For each logically separate change create a new commit. Committing together 5 small bug fixes in a commit or creating 5 different commits for a small new feature are not good idea. Logical and atomic commits help others to understand your change. They are also useful if you want to get rid of some specific code change at a later point.&lt;/p&gt;

&lt;p&gt;You might do frequent small commits in your branch that’s actually useful to keep your code changes safe, in that case it would be good idea to squash your commits and clean commit history before pushing your code to main repo so that everyone else gets a clean copy. But yes it is not recommended to change commit history after it is shared with others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Write useful and detailed commit message:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your commits should have a nice detailed message that explains the change. As a rule the first line should be a concise message not more than 50 letters, that should be followed by a blank line and a detailed message. The original format specified by Tim Pope is: &lt;/p&gt;

&lt;p&gt;&lt;em&gt;================================================================================&lt;/em&gt; _ Short (50 chars or less) summary of changes_&lt;/p&gt;

&lt;p&gt;&lt;em&gt;More detailed explanatory text, if necessary. Wrap it to&lt;/em&gt; _ about 72 characters or so. In some contexts, the first_ _ line is treated as the subject of an email and the rest of_ _ the text as the body. The blank line separating the_ _ summary from the body is critical (unless you omit the body_ _ entirely); tools like rebase can get confused if you run_ _ the two together._&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Further paragraphs come after blank lines.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Bullet points are okay, too&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Typically a hyphen or asterisk is used for the bullet,&lt;/em&gt; _ preceded by a single space, with blank lines in_ _ between, but conventions vary here_ _ ================================================================================_ Also take care to describe your changes in an imperative mode.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Contributing to a public project – Interactive rebasing and squashing to create clean PR:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are contributing your code to a public repo you may not have required permissions to directly update but will rather be submitting your changes to maintainers. A preferred way to contribute to such projects is to fork the code and then create a branch for doing changes. You can then create a pull request and submit it to maintainers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;git request-pull origin/master myfork&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Interactively rebase and squashing your commits prior to creating PR can be very helpful to create clean commits and keep project history clean.  It also helps to get rid for merge commits.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Dec 2014 00:00:00 +0530</pubDate>
        <link>/2014/12/09/useful-guidelines-for-contributing-to-a-project-managed-using-git/</link>
        <guid isPermaLink="true">/2014/12/09/useful-guidelines-for-contributing-to-a-project-managed-using-git/</guid>
        
        
      </item>
    
      <item>
        <title>How To Manage And Balance Huge Data Load For Big Kafka Clusters</title>
        <description>&lt;h1&gt;How to manage and balance &amp;quot;Huge Data Load&amp;quot; for Big Kafka Clusters&lt;/h1&gt;

&lt;h2&gt;1. Add Partition Tool&lt;/h2&gt;

&lt;p&gt;Partitions act as unit of parallelism. Messages of a single topic are distributed to multiple partitions that can be stored and served on different servers. Upon creation of a topic, the number of partitions for this topic has to be specified. Later on more partitions may be needed for this topic when the volume of this topic increases. This tool helps to add more partitions for a specific topic and also allow manual replica assignment of the added partitions. You can refer to the previous blog &lt;a href=&quot;http://blog.xebia.in/2014/12/03/quick-steps-have-a-kafka-cluster-up-running-in-3-minutes/&quot;&gt;Quick steps : Have a Kafka Cluster Up &amp;amp; Running in 3 minutes&lt;/a&gt; to setup kafka cluster and create topics.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;bin/kafka-add-partitions.sh

Option                                                    Description

\--partition &amp;lt;Integer: # of partitions&amp;gt;      REQUIRED: Number of partitions to add to the topic

\--replica-assignment-list                       For manually assigning replicas to &amp;lt;broker_id_for_part1_replica1 :            brokers for the new partitions broker_id_for_part1_replica2,              (default: ) broker_id_for_part2_replica1 : broker_id_for_part2_replica2, ...&amp;gt;

\--topic &amp;lt;topic&amp;gt;                                      REQUIRED: The topic for which partitions need to be added.

\--zookeeper &amp;lt;urls&amp;gt;                               REQUIRED: The connection string for the zookeeper connection in the form host:port. Multiple URLS can be given to allow fail-over.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2. Reassign Partitions Tool&lt;/h2&gt;

&lt;h3&gt;What does the tool do?&lt;/h3&gt;

&lt;p&gt;The goal of this tool is similar to the Referred Replica Leader Election Tool as to achieve load balance across brokers. But instead of only electing a new leader from the assigned replicas of a partition, this tool allows to change the assigned replicas of partitions – remember that followers also need to fetch from leaders in order to keep in sync, hence sometime only balance the leadership load is not enough.&lt;/p&gt;

&lt;p&gt;A summary of the steps that the tool does is shown below -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The tool updates the zookeeper path &amp;quot;/admin/reassign_partitions&amp;quot; with the list of topic partitions and (if specified in the Json file) the list of their new assigned replicas.&lt;/li&gt;
&lt;li&gt;The controller listens to the path above. When a data change update is triggered, the controller reads the list of topic partitions and their assigned replicas from zookeeper.&lt;/li&gt;
&lt;li&gt;For each topic partition, the controller does the following: 3.1. Start new replicas in RAR - AR (RAR = Reassigned Replicas, AR = original list of Assigned Replicas) 3.2. Wait until new replicas are in sync with the leader 3.3. If the leader is not in RAR, elect a new leader from RAR 3.4 4. Stop old replicas AR - RAR 3.5. Write new AR 3.6. Remove partition from the /admin/reassign_partitions path&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;How to use the tool?&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ bin/kafka-reassign-partitions.sh


Option                                                        Description                                                         
\--broker-list &amp;lt;brokerlist&amp;gt;                            The list of brokers to which the partitions need to be reassigned in the form &amp;quot;0,1,2&amp;quot;. This is required for automatic topic reassignment.
\--execute [execute]                                   This option does the actual reassignment. By default, the tool does a dry run
\--manual-assignment-json-file &amp;lt;manual    The JSON file with the list of manual assignment json file path&amp;gt;                       reassignmentsThis option or topics- to-move-json-file needs to be specified. The format to use is - {&amp;quot;partitions&amp;quot;: [{&amp;quot;topic&amp;quot;: &amp;quot;foo&amp;quot;, &amp;quot;partition&amp;quot;: 1, &amp;quot;replicas&amp;quot;: [1,2,3] }], &amp;quot;version&amp;quot;:1 }
\--topics-to-move-json-file &amp;lt;topics to        The JSON file with the list of topics reassign json file path&amp;gt;                         to reassign.This option or manual- assignment-json-file needs to be specified. The format to use is - {&amp;quot;topics&amp;quot;: [{&amp;quot;topic&amp;quot;: &amp;quot;foo&amp;quot;},{&amp;quot;topic&amp;quot;: &amp;quot;foo1&amp;quot;}], &amp;quot;version&amp;quot;:1 }
\--zookeeper &amp;lt;urls&amp;gt;                                REQUIRED: The connection string for the zookeeper connection in the form host:port. Multiple URLS can be given to allow fail-over.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3.  Add Brokers(Cluster Expansion)&lt;/h2&gt;

&lt;p&gt;Cluster expansion involves including brokers with new broker ids in a Kafka 08 cluster. Typically, when you add new brokers to a cluster, they will not receive any data from existing topics until this tool is run to assign existing topics/partitions to the new brokers. The tool allows 2 options to make it easier to move some topics in bulk to the new brokers. These 2 options are a) topics to move b) list of newly added brokers. Using these 2 options, the tool automatically figures out the placements of partitions for the topics on the new brokers.&lt;/p&gt;

&lt;p&gt;The following example moves 2 topics (foo1, foo2) to newly added brokers in a cluster (5,6,7).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./bin/kafka-reassign-partitions.sh --topics-to-move-json-file topics-to-move.json --broker-list &lt;span class=&quot;s2&quot;&gt;&amp;quot;5,6,7&amp;quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\-&lt;/span&gt;-execute

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat topics-to-move.json &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;topics&amp;quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;topic&amp;quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&amp;quot;foo1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;topic&amp;quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&amp;quot;foo2&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;:1 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;strong&gt;Selectively moving some partitions to a broker&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The partition movement tool can also be moved to selectively move some replicas for certain partitions over to a particular broker. Typically, if you end up with an unbalanced cluster, you can use the tool in this mode to selectively move partitions around. In this mode, the tool takes a single file which has a list of partitions to move and the replicas that each of those partitions should be assigned to.&lt;/p&gt;

&lt;p&gt;The following example moves 1 partition (foo-1) from replicas 1,2,3 to 1,2,4&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./bin/kafka-reassign-partitions.sh --manual-assignment-json-file partitions-to-move.json --execute

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat partitions-to-move.json
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;partitions&amp;quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;topic&amp;quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;partition&amp;quot;&lt;/span&gt;: 1, &lt;span class=&quot;s2&quot;&gt;&amp;quot;replicas&amp;quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1,2,4&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;:1 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;** : **These tools are available in version 0.8 , not prior versions.&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Dec 2014 00:00:00 +0530</pubDate>
        <link>/2014/12/04/how-to-manage-and-balance-huge-data-load-for-big-kafka-clusters/</link>
        <guid isPermaLink="true">/2014/12/04/how-to-manage-and-balance-huge-data-load-for-big-kafka-clusters/</guid>
        
        
      </item>
    
      <item>
        <title>Quick Steps Have A Kafka Cluster Up Running In 3 Minutes</title>
        <description>&lt;h1&gt;Quick steps : Have a Kafka Cluster Up &amp;amp; Running in 3 minutes&lt;/h1&gt;

&lt;h1&gt;Introduction&lt;/h1&gt;

&lt;p&gt;For beginners to understand, kafka is nothing but a messaging system which is distributed and partitioned across brokers, having its data replicated, so as to provide the scalability and fault tolerance. For advanced configuration and tools to manage data load , please read &lt;a href=&quot;http://xebee.xebia.in/index.php/2014/12/04/how-to-manage-and-balance-huge-data-load-for-big-kafka-clusters/&quot;&gt;How to manage and balance “Huge Data Load” for Big Kafka Clusters&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;Terminology&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Topic&lt;/strong&gt;: Category associated with each message, known as &amp;quot;Topic&amp;quot; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Broker&lt;/strong&gt;: Cluster has servers, known as &amp;quot;Brokers&amp;quot;. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Producer&lt;/strong&gt;: Processes which publish message to brokers. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Consumer&lt;/strong&gt;: Processes which are subscribed to topics in the cluster and process the published messages.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;Steps&lt;/h1&gt;

&lt;h5&gt;1.  Download the kafka and untar it. (Latest stable release is 0.8.1.1 and 0.8.2 is in beta)&lt;/h5&gt;

&lt;p&gt;Click to &lt;a href=&quot;https://www.apache.org/dyn/closer.cgi?path=/kafka/0.8.1.1/kafka_2.9.2-0.8.1.1.tgz&quot; title=&quot;Download&quot;&gt;Download&lt;/a&gt; from mirror sites.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ tar -xzf kafka_2.9.2-0.8.1.1.tgz

$ cd kafka_2.9.2-0.8.1.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;2.  Start zookeeper server.&lt;/h5&gt;

&lt;p&gt;Here we are starting the zookeeper which comes bundled with kafka. you may also use a  standalone zookeeper cluster with odd number of nodes and then point the kafka brokers to this zookeeper cluster. For production environment , do not use the bundled zookeeper.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ bin/zookeeper-server-start.sh config/zookeeper.properties
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;3.  Start the kafka servers(brokers).&lt;/h5&gt;

&lt;p&gt;Here we are setting up 3 broker cluster. so we will be having 3 different server.properties files corresponding to each broker.&lt;/p&gt;

&lt;p&gt;you can copy the server.properties file and change the broker ids, log directory and port in the copied files. These 3 configuration properties must be unique to all the brokers which are on same machine. When you are using multiple machines and having one broker on one machine. you need to have only &amp;quot;broker.id&amp;quot; as unique. Ports and log directory need not be unique then. On same machine, if these parameters are same, overriding will happen. &lt;/p&gt;

&lt;h6&gt;      A. Copy the server.properties files&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ cp config/server.properties config/server-1.properties cp config/server.properties config/server-2.properties
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For server.properties, we already have :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ broker.id=0 port=9092 log.dir=/tmp/kafka-logs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;      B. Edit the two new files :&lt;/h6&gt;

&lt;p&gt;config/server-1.properties:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ broker.id=1 port=9093 log.dir=/tmp/kafka-logs-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;config/server-2.properties:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ broker.id=2 port=9094 log.dir=/tmp/kafka-logs-2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;        C. Start all 3 brokers.&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ bin/kafka-server-start.sh config/server.properties &amp;amp; bin/kafka-server-start.sh config/server-1.properties &amp;amp; bin/kafka-server-start.sh config/server-2.properties &amp;amp; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;4. Create a topic&lt;/h5&gt;

&lt;p&gt;You may specify replication factor and partitions per topic, else default values from properties file will be used. Topic name must be there in creation command. Once topic is created as per requirements of partitioning and replication , cluster is ready to receive and send the messages from producers and consumers.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 9 --topic test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we have specified 9 partitions , it will create 9 directories 0-8 numbered on each broker , as replication factor is 3. &lt;/p&gt;

&lt;h5&gt;5. Produce sample messages from command Line&lt;/h5&gt;

&lt;h6&gt;        A. Run Producer&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we have specified the one broker , which will be contacted first and further zookeeper will co-ordinate to find out on which broker to put the message , as it has complete list of brokers registered to it. &lt;/p&gt;

&lt;h6&gt;     B. Send Some messages&lt;/h6&gt;

&lt;p&gt;This is message 1 on test topic.&lt;/p&gt;

&lt;p&gt;This is message 2 on test topic.&lt;/p&gt;

&lt;p&gt;We have sent the messages to the broker, which will be stored in partitions for the test topic. &lt;/p&gt;

&lt;h5&gt;6. Consume the sample messages.&lt;/h5&gt;

&lt;h6&gt;      A. Run the Consumer.&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : Use different terminal for producer and consumer so as to get better understanding.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ bin/kafka-console-consumer.sh --zookeeper localhost:2181 --from-beginning --topic test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As and when command executes, it consumes messages from test topic , from beginning . If we do not specify &amp;quot;--from-beginning&amp;quot; parameter, consumer will consume only the messages produced after the consumer is running.&lt;/p&gt;

&lt;p&gt;Here Response is the list of messages on the broker. &lt;/p&gt;

&lt;h6&gt;      B. Response&lt;/h6&gt;

&lt;p&gt;This is message 1 on test topic.&lt;/p&gt;

&lt;p&gt;This is message 2 on test topic&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : You have to kill the consumer(^C) yourself , else it will keep running and waiting for the messages to be consumed. You can verify it by sending new messages if you have producer open in other terminal.&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Dec 2014 00:00:00 +0530</pubDate>
        <link>/2014/12/03/quick-steps-have-a-kafka-cluster-up-running-in-3-minutes/</link>
        <guid isPermaLink="true">/2014/12/03/quick-steps-have-a-kafka-cluster-up-running-in-3-minutes/</guid>
        
        
      </item>
    
      <item>
        <title>Customizing Angular Directives</title>
        <description>&lt;h1&gt;Customizing Angular Directives&lt;/h1&gt;

&lt;p&gt;While developing Angular Application we have a obvious choice of using third party directives. Most of the time these directive are suffice to handle all the use cases. But situation may occur when you feel that there is really something missing to fulfill your Specific problem. Common practice is to add your own custom directive along with the directive, you want to use in the element. But It sounds quite weired to Have two directives to solve the same problem. Hence we might have to think of some different way.&lt;/p&gt;

&lt;p&gt;In this Post i will share one of the Scenerio in above said category and solution to that of-course.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let us take an example of uibootstrap datepicker-popup directive to show the datepicker. This directive can be used in HTML like this&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; [input type=&amp;quot;text&amp;quot; class=&amp;quot;form-control&amp;quot; datepicker-popup=&amp;quot;&amp;quot; 
      ng-model=&amp;quot;date&amp;quot; data-show-button-bar=&amp;quot;false&amp;quot; data-datepicker-mode =&amp;quot;mode&amp;quot; is-open=&amp;quot;opened&amp;quot; close-text=&amp;quot;Close&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will do pretty much all the jobs one can expect from the date picker. As per the requirements you can add more options available with this directive. You might use this date picker in several places across your application. Most of the time you will find same configuration. For this you will be repeating the same piece of code again and again. I don&amp;#39;t really like this and sure you as well.&lt;/p&gt;

&lt;p&gt;There is one more scenario. Your back end API gives you date in different format than what you have to display in the GUI and similarly you have to send back to API in different format. For this we have to first change the date string to date before passing to the directive. And also change the date before sending back to back end API. Again you are going to do it in every controller managing the HTML.&lt;/p&gt;

&lt;p&gt;To handle both the above cases we can write a custom directive that will internally use the datepicker-popup directive. We will provide all the options in custom directive and then this can be used every where else.&lt;/p&gt;

&lt;p&gt;Here is the example&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;directive(&amp;#39;CustomDatepicker&amp;#39;, function ($compile, $filter) {
         return {
             restrict: &amp;#39;A&amp;#39;,
             scope   : {
                   CustomDatepicker: &amp;quot;=&amp;quot;
             },
             link    : function ($scope, element) {
               $scope.mode = &amp;quot;year&amp;quot;;
               var timestamp = Date.parse($scope.CustomDatepicker);
               if (!isNaN(timestamp)) {
                   $scope.date = new Date(timestamp);
               }

               element.attr(&amp;#39;data-datepicker-popup&amp;#39;, &amp;quot;dd-MM-yyyy&amp;quot;);
               element.attr(&amp;#39;data-ng-model&amp;#39;, &amp;#39;date&amp;#39;);
               element.attr(&amp;#39;data-is-open&amp;#39;, &amp;#39;datePicker.open&amp;#39;);
               element.attr(&amp;#39;data-show-button-bar&amp;#39;, false);
               element.attr(&amp;#39;data-ng-click&amp;#39;, &amp;#39;datePicker.open = true&amp;#39;);
               element.attr(&amp;#39;data-datepicker-mode&amp;#39;, &amp;#39;mode&amp;#39;);
               element.removeAttr(&amp;quot;data-custom-datepicker&amp;quot;);
               $scope.$evalAsync(function (scope) {
                   $compile(element)(scope);
             });

             $scope.$watch(&amp;#39;date&amp;#39;, function () {
               if ($scope.date) {
                   $scope.customDatepicker = $filter(&amp;#39;date&amp;#39;)($scope.date, &amp;quot;yyyy-MM-dd&amp;quot;);
               }
             });

         }
        };
      });
    });
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the custom directive i have defined the scope variable customDatepicker that holds the date value as received by your controller. Now change this date string to proper date &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;var timestamp = Date.parse($scope.customDatepicker);
if (!isNaN(timestamp)) {
$scope.date = new Date(timestamp);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we will add datepicker and all of the other options that we needed. This can be done using attr method of the element. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;element.attr(&amp;#39;data-datepicker-popup&amp;#39;, &amp;quot;dd-MM-yyyy&amp;quot;);
element.attr(&amp;#39;data-ng-model&amp;#39;, &amp;#39;date&amp;#39;);
element.attr(&amp;#39;data-is-open&amp;#39;, &amp;#39;datePicker.open&amp;#39;);
element.attr(&amp;#39;data-show-button-bar&amp;#39;, false);
element.attr(&amp;#39;data-ng-click&amp;#39;, &amp;#39;datePicker.open = true&amp;#39;);
element.attr(&amp;#39;data-datepicker-mode&amp;#39;, &amp;#39;mode&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remove custom-datepicker as it is no longer needed. element.removeAttr(&amp;quot;data-custom-datepicker&amp;quot;); to apply the DOM changes in the link function add following lines &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$scope.$evalAsync(function (scope) {
$compile(element)(scope);
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;it will update the DOM in next digest cycle. Finally as we have bind different scope variable with the date picker, our original scope variable remain unchanged. So we need this to be updated . To achieve this we will add watch on date And update the customDatepicker whenever date will be changed &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$scope.$watch(&amp;#39;date&amp;#39;, function () {
if ($scope.date) {
$scope.customDatepicker = $filter(&amp;#39;date&amp;#39;)($scope.date, &amp;quot;yyyy-MM-dd&amp;quot;);
}
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the HTML we just have to add following code &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[input type=&amp;quot;text&amp;quot; data-custom-datepicker=&amp;quot;input.date&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will implicitly add date-picker and all the associated options.Also you need not to worry for the date format in every controller. Date format that will be displayed is dd-MM-yyyy and the output format will be yyyy-MM-dd. Similarly you can customize your other directives as well. Happy coding....&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Nov 2014 00:00:00 +0530</pubDate>
        <link>/2014/11/26/customizing-angular-directives/</link>
        <guid isPermaLink="true">/2014/11/26/customizing-angular-directives/</guid>
        
        
      </item>
    
      <item>
        <title>Alfresco Working With Aspects In Cmis</title>
        <description>&lt;h1&gt;Table of Contents&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#Alfresco-working-with-aspects-in-CMIS&quot;&gt;Alfresco working with aspects in CMIS.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#What-are-aspects&quot;&gt;What are aspects?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Why-aspects-are-used&quot;&gt;Why aspects are used?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#use-cases&quot;&gt;Use Cases:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#creating-alfresco-cmis-session&quot;&gt;Creating alfresco CMIS session.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#getting-existing-folder-object&quot;&gt;Get the existing folder object : It can be AlfrescoFolder or cmis Folder object.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#creating-document-in-existing-folder&quot;&gt;Creating document in the existing folder.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#verify&quot;&gt;Verify :&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Alfresco working with aspects in CMIS. &lt;a id=&quot;Alfresco-working-with-aspects-in-CMIS&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Alfresco is one of the most popular and widely used open source content management system.&lt;/p&gt;

&lt;p&gt;Alfresco comes in both enterprise and community version. At the time of writing this blog latest version for &lt;strong&gt;Enterprise&lt;/strong&gt; edition is &lt;strong&gt;4.2.3.1&lt;/strong&gt;. At the time of writing this blog latest version for &lt;strong&gt;Community&lt;/strong&gt; edition is &lt;strong&gt;5.0.b&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Before starting with this blog all should be familiar with CMIS and how to use CMIS along with alfresco. For getting started with CMIS with alfresco and other content repository you must first read our blog on&lt;strong&gt;&lt;a href=&quot;http://blog.xebia.in/2015/02/12/playing-with-alfresco-repository-using-cmis/&quot;&gt; Alfresco working with CMIS (File, Folder and Search operation)&lt;/a&gt;. &lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;What are aspects? &lt;a id=&quot;What-are-aspects&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Aspects most likely related to content modeling in Alfresco which itself is one of the biggest feature of the alfresco system. Aspects as the like the additional information that we can dynamically attach to any content within the alfresco repository. Aspects scan be linked to the content individually to add aspect properties to the content or can be called within or used within the types in alfresco content model to add the properties that aspect is holding.&lt;/p&gt;

&lt;p&gt;Alfresco comes with many aspects by default we can create our own aspects as per requirement.&lt;/p&gt;

&lt;h2&gt;Why aspects are used? &lt;a id=&quot;Why-aspects-are-used&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Aspects basically used to add dynamicity to the content modelling in alfresco means aspects can be dynamically added and removed from the content or folder within the alfresco repository. Aspects are much like the super class in java which are used by its sub classes to add all the functionality that super class holding.&lt;/p&gt;

&lt;p&gt;Before starting how to use aspects in alfresco using CMIS we must be aware about how to create aspects in alfresco this we have already done in our previous blog &lt;strong&gt;&lt;a href=&quot;http://blog.xebia.in/2014/11/20/alfresco-custom-field-search-in-cmis-approach/&quot;&gt;Alfresco custom field search in CMIS approach&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For using alfresco aspects in CMIS we have to use alfresco-opencmis-extension-0.3.jar along with CMIS library for content repository access.&lt;/p&gt;

&lt;h2&gt;Use Cases : &lt;a id=&quot;use-cases&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;*&lt;em&gt;I will take two best use case around the same approach : *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; This approach can be used to create plugin/project in which we have 10 documents of different type mimetype like(application/pdf, image/png, image/jpg, application/text etc) and we have to create these document with different metadata at the time document is uploaded.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Create project that support cmis approach to link alfresco repository to dynamically assign metadata to each document of different type.&lt;/p&gt;

&lt;p&gt;There can be more use case where you can use same example.&lt;/p&gt;

&lt;p&gt;First we have to create session that can be used to access aspects and apply aspects to the new content if not already having that aspect.&lt;/p&gt;

&lt;h2&gt;Creating alfresco CMIS session. &lt;a id=&quot;creating-alfresco-cmis-session&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Below is the code to create CMIS session but by using alfresco factory class (org.alfresco.cmis.client.impl.AlfrescoObjectFactoryImpl) because aspects are related to alfresco.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// default factory implementation&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SessionFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SessionFactoryImpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// map to contain connection parameter any cmis repository using atom pub&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ATOMPUB_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://localhost:9090/alfresco/service/cmis&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BINDING_TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BindingType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ATOMPUB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;REPOSITORY_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;6fc907f9-6790-46b5-9c25-d6855ff8ff5c&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OBJECT_FACTORY_CLASS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;org.alfresco.cmis.client.impl.AlfrescoObjectFactoryImpl&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// getting Instance from User Credential&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// create session&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we have passed one more parameter in parameter map during session creation&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// for creating alfresco session which help to deal with alfresco related objects&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OBJECT_FACTORY_CLASS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;org.alfresco.cmis.client.impl.AlfrescoObjectFactoryImpl&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to deal with aspects, alfrescoDocument or AlfrescoFolder etc.&lt;/p&gt;

&lt;h2&gt;Get the existing folder object : It can be AlfrescoFolder or cmis Folder object. &lt;a id=&quot;getting-existing-folder-object&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;OperationContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createOperationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setRenditionFilterString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cmis:thumbnail&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Folder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmisFolder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Folder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getObjectByPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can either create the new folder and create new document within that folder or use existing folder for document creation. But make sure that user creating document must have access to that particular folder.&lt;/p&gt;

&lt;h2&gt;Creating document in the existing folder. &lt;a id=&quot;creating-document-in-existing-folder&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Setting properties for new document to be created within repository&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PropertyIds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;test_Aspect.pdf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PropertyIds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OBJECT_TYPE_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;cmis:document&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;FileInputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oInputStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FileInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/home/sourabh/Desktop/test_aspects.pdf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Reading the content in Bytes stream and Writing it to new file in&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ContentStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contentStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ContentStreamImpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test_Aspect.pdf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;application/pdf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// creating document with name title and description&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Document&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contentStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VersioningState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MAJOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now new document is uploaded with name test_aspects.pdf in the root directory. You  can get complete detail for the document uploaded from the document object.&lt;/p&gt;

&lt;h2&gt;Check for aspect whether applied to new document or not if no apply custom aspect to document created. &lt;a id=&quot;check-for-aspects-if-applied&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;For this we have to first convert CMIS Document to AlfrescoDocument object then we have add aspect for that document.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// converting cmis document to alfresco document&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AlfrescoDocument&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alfrescoDocument&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AlfrescoDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alfrescoDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasAspect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;P:my:cutomfieldsdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// adding custom meta data type aspect to document&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;alfrescoDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAspect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;P:my:cutomfieldsdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Setting properties for new document to be created within repository&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customPropertiesDocument&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Set agreement serial number custom&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;PropertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_serial_number&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;serial number&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;customPropertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_status&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;customPropertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_id&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;customPropertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;customPropertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_code&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;code&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// updating the document with the new meta data fields&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;CmisObject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updatedDoucment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alfrescoDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;updateProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;customPropertiesDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;document&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updatedDoucment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; successfully updated&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;document already updated&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Document is updated with our custom aspect we can also add already defined aspects to the document in alfresco repository in same way as we did for custom aspect.&lt;/p&gt;

&lt;p&gt;In this we have checked whether our custom aspects is already linked with document or not if not then add custom aspect to document and then update custom properties for document.&lt;/p&gt;

&lt;h2&gt;Verify: &lt;a id=&quot;verify&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;To verify check document with same nodeId in alfresco repository and verify its metadata. New properties must be added to same document which are linked with aspect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://blog.xebia.in/tag/alfresco/&quot;&gt;For more hacks about alfresco visit&lt;/a&gt;..................&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Nov 2014 00:00:00 +0530</pubDate>
        <link>/2014/11/26/alfresco-working-with-aspects-in-cmis/</link>
        <guid isPermaLink="true">/2014/11/26/alfresco-working-with-aspects-in-cmis/</guid>
        
        <category>alfesco</category>
        
        <category>custom aspects</category>
        
        <category>cmis adding custom aspects</category>
        
        
      </item>
    
      <item>
        <title>Alfresco Custom Field Search In Cmis Approach</title>
        <description>&lt;h1&gt;Alfresco custom field search in CMIS approach.&lt;/h1&gt;

&lt;p&gt;Before starting with alfresco custom field search using CMIS I would like you to know basic concepts.&lt;/p&gt;

&lt;h1&gt;Table of Contents&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#what-is-cmis&quot;&gt;What is CMIS?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#how-cmis-works&quot;&gt;How CMIS works?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#how-to-create-custom-model-in-alfresco&quot;&gt;How to create custom model in alfresco?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#use-cases&quot;&gt;Use Cases:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#how-to-make-custom-filed-searchable&quot;&gt;How to make custom field searchable?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#how-to-search-document-using-cmis-query&quot;&gt;How to search document using CMIS query?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#complete-example-of-dyanamic-cmis-query&quot;&gt;Complete example for dynamic CMIS query?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;What is CMIS? &lt;a id=&quot;what-is-cmis&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;CMIS stands for Content Management Interoperability Service. CMIS is an open standard for accessing content repository given by OASIS.&lt;/p&gt;

&lt;p&gt;There are set of rules or restriction enforced by CMIS for accessing CMIS compatible repository.&lt;/p&gt;

&lt;p&gt;Alfresco support the CMIS standard for accessing the content repository.&lt;/p&gt;

&lt;h2&gt;How CMIS works? &lt;a id=&quot;how-cmis-works&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;These are set of binding that CMIS provide to bind session with CMIS compatible repository.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Local session binding.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Atom pub binding.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Web service binding.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After authentication using either username/password or user token, a valid user session is created that a authenticated user can use to perform get, upload, and other manipulation operations.&lt;/p&gt;

&lt;p&gt;User can create new content, upload new content, edit content, delete content, associate or update metadata with particular content within the CMIS compatible repository.&lt;/p&gt;

&lt;p&gt;There are some limitations when you are working with custom fields and aspects as these are not accessible threw apache CMIS library we have to use ALFRESCO open CMIS library to get additional functionality.&lt;/p&gt;

&lt;h2&gt;How to create custom model in alfresco? &lt;a id=&quot;how-to-create-custom-model-in-alfresco&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Now this is an practical example to create an custom model within alfresco. For creating custom model in alfresco(community version) we need to create two file one is custom model file and other is context file which contain registry for custom model these two files are mandatory for creating new model there are other files also which are created based on requirements.&lt;/p&gt;

&lt;p&gt;There are two ways of creating new metadata in alfresco one is by using aspects and other is by using types. We are using aspects for adding new metadata in alfresco as aspects are dynamic and reusable while types are not reusable component.&lt;/p&gt;

&lt;h2&gt;USE CASES : &lt;a id=&quot;use-cases&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;We take three use cases where we can use same example :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; When we have to create our custom field search without using Alfresco default web script search within alfresco share portal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; When we want to use alfresco document management with independent product where you have to search alfresco document without depending on alfresco web script or default search capability.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; In case you have dynamic MetaData search form for alfresco documents search which could change at run time and you want to search document based on that particular MetaData field on search form. In this case we have to use dynamic CMIS queries as done in last step.&lt;/p&gt;

&lt;p&gt;These are only few use cases there could be many..&lt;/p&gt;

&lt;p&gt;First we will start with creating new model for which we need some files create these files with names:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;myCustomFields-model.xml&lt;/li&gt;
&lt;li&gt;myCustomFields-model-context.xml&lt;/li&gt;
&lt;li&gt;&lt;p&gt;web-client-config-custom.xml paste them under alfresco/tomcat/shared/classes/alfresco/extension&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;myCustomFields.properties paste it under alfresco/tomcat/shared/classes/alfresco/messages&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;custom-slingshot-application-context.xml&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;share-config-custom.xml paste them under alfresco/tomcat/shared/classes/alfresco/web-extension&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;myCustomFields-model.xml should contain following content:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Definition of Knowledge Base Model --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;model&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:model&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.alfresco.org/model/dictionary/1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Optional meta-data about the model --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Knowledge Base Model&lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;author&amp;gt;&lt;/span&gt;Will Abson&lt;span class=&quot;nt&quot;&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Imports are required to allow references to definitions in other models --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;imports&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Import Alfresco Dictionary Definitions --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;import&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.alfresco.org/model/dictionary/1.0&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prefix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Import Alfresco Content Domain Model Definitions --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;import&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.alfresco.org/model/content/1.0&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prefix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/imports&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Introduction of new namespaces defined by this model --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;namespaces&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;namespace&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my.model&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prefix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/namespaces&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspects&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Definition of new Content Aspect: Knowledge Base Document --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:cutomfieldsdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;my custom model&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_serial_number&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;d:text&lt;span class=&quot;nt&quot;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_status&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;d:text&lt;span class=&quot;nt&quot;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_id&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;d:text&lt;span class=&quot;nt&quot;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;multiple&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/multiple&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;index&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tokenised&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tokenised&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;/index&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;d:text&lt;span class=&quot;nt&quot;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;multiple&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/multiple&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;index&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tokenised&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tokenised&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;/index&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_code&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;d:text&lt;span class=&quot;nt&quot;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;multiple&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/multiple&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;index&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tokenised&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tokenised&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;/index&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/aspect&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/aspects&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/model&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We used property &lt;index enabled=&quot;true&quot;&gt; which make field searchable in full index search. Property &lt;multiple&gt;true&lt;/multiple&gt; is used to contain multiple field within one field in comma separated form for now you can remove this.&lt;/p&gt;

&lt;p&gt;myCustomFields-model-context.xml should contain following content:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE beans PUBLIC &amp;#39;-//SPRING//DTD BEAN//EN&amp;#39;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;#39;http://www.springframework.org/dtd/spring-beans.dtd&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;beans&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Registration of new models --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;extension.kb.dictionaryBootstrap&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;parent=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dictionaryModelBootstrap&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;depends-on=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dictionaryBootstrap&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;models&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;alfresco/extension/myCustomFields-model.xml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/list&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;extension.kb.resourceBundle&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;org.alfresco.i18n.ResourceBundleBootstrapComponent&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;resourceBundles&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;alfresco.messages.myCustomFields&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/list&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;web-client-config-custom.xml should contain following content:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;alfresco-config&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;evaluator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;string-compare&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;condition=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Advanced Search&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;advanced-search&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;content-types&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/content-types&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;folder-types&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/folder-types&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;custom-properties&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta-data&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aspect=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:cutomfieldsdata&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_serial_number&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta-data&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aspect=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:cutomfieldsdata&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_status&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta-data&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aspect=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:cutomfieldsdata&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_id&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta-data&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aspect=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:cutomfieldsdata&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_name&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta-data&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aspect=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:cutomfieldsdata&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_code&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/custom-properties&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/advanced-search&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/alfresco-config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;this file is use to make each field in model searchable can be used in alfresco advanced search and CMIS field search.&lt;/p&gt;

&lt;p&gt;myCustomFields.properties should contain following content:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-properties&quot; data-lang=&quot;properties&quot;&gt;&lt;span class=&quot;na&quot;&gt;my_model.property.my_metadata_custom_serial_number.title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Serial Number&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;my_model.property.my_metadata_custom_status.title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Status&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;my_model.property.my_metadata_custom_id.title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Document ID&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;my_model.property.my_metadata_custom_name.title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Name&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;my_model.property.my_metadata_custom_code.title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Code&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;custom-slingshot-application-context.xml should contain following content:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;beans&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.springframework.org/schema/beans&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Add Knowledge Base messages --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;webscripts.kb.resources&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;org.springframework.extensions.surf.util.ResourceBundleBootstrapComponent&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;resourceBundles&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;alfresco.messages.myCustomFields&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/list&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This property file is to access field property title on alfresco share.&lt;/p&gt;

&lt;p&gt;share-config-custom.xml should contain following content:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;alfresco-config&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Repository Library config section --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;evaluator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;string-compare&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;condition=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;RepositoryLibrary&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Whether the link to the Repository Library appears in the header component or not.--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;visible&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/visible&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;evaluator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;string-compare&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;condition=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Remote&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;remote&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;endpoint&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;alfresco-noauth&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Alfresco - unauthenticated access&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Access to Alfresco Repository WebScripts that do not require authentication&lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;connector-id&amp;gt;&lt;/span&gt;alfresco&lt;span class=&quot;nt&quot;&gt;&amp;lt;/connector-id&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;endpoint-url&amp;gt;&lt;/span&gt;http://localhost:8080/alfresco/s&lt;span class=&quot;nt&quot;&gt;&amp;lt;/endpoint-url&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;identity&amp;gt;&lt;/span&gt;none&lt;span class=&quot;nt&quot;&gt;&amp;lt;/identity&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/endpoint&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;endpoint&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;alfresco&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Alfresco - user access&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Access to Alfresco Repository WebScripts that require user authentication&lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;connector-id&amp;gt;&lt;/span&gt;alfresco&lt;span class=&quot;nt&quot;&gt;&amp;lt;/connector-id&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;endpoint-url&amp;gt;&lt;/span&gt;http://localhost:8080/alfresco/s&lt;span class=&quot;nt&quot;&gt;&amp;lt;/endpoint-url&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;identity&amp;gt;&lt;/span&gt;user&lt;span class=&quot;nt&quot;&gt;&amp;lt;/identity&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/endpoint&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;endpoint&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;alfresco-feed&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Alfresco Feed&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Alfresco Feed - supports basic HTTP authentication via the EndPointProxyServlet
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;connector-id&amp;gt;&lt;/span&gt;http&lt;span class=&quot;nt&quot;&gt;&amp;lt;/connector-id&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;endpoint-url&amp;gt;&lt;/span&gt;http://localhost:8080/alfresco/s&lt;span class=&quot;nt&quot;&gt;&amp;lt;/endpoint-url&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;basic-auth&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/basic-auth&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;identity&amp;gt;&lt;/span&gt;user&lt;span class=&quot;nt&quot;&gt;&amp;lt;/identity&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/endpoint&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;endpoint&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;activiti-admin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Activiti Admin UI - user access&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Access to Activiti Admin UI, that requires user authentication&lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;connector-id&amp;gt;&lt;/span&gt;activiti-admin-connector&lt;span class=&quot;nt&quot;&gt;&amp;lt;/connector-id&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;endpoint-url&amp;gt;&lt;/span&gt;http://localhost:8080/alfresco/activiti-admin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/endpoint-url&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;identity&amp;gt;&lt;/span&gt;user&lt;span class=&quot;nt&quot;&gt;&amp;lt;/identity&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/endpoint&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/remote&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Document Library config section --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;evaluator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;string-compare&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;condition=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;DocumentLibrary&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Used by the &amp;quot;Manage Aspects&amp;quot; action For custom aspects, remember to also add the relevant i18n string(s) cm_myaspect=My Aspect--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspects&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Aspects that a user can see --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;visible&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:generalclassifiable&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:complianceable&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:dublincore&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:effectivity&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:summarizable&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:versionable&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:templatable&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:emailed&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;emailserver:aliasable&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:taggable&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;app:inlineeditable&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;aspect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:cutomfieldsdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/visible&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Aspects that a user can add. Same as &amp;quot;visible&amp;quot; if left empty --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;addable&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/addable&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Aspects that a user can remove. Same as &amp;quot;visible&amp;quot; if left empty --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;removeable&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/removeable&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/aspects&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- cm:content type (existing nodes) --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;evaluator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;node-type&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;condition=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cm:content&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;forms&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;field-visibility&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_serial_number&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_status&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_id&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_code&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/field-visibility&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Default form configuration used on the document details and edit metadata pages --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;search&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;field-visibility&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_serial_number&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_status&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_id&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_code&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/field-visibility&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Document Library pop-up Edit Metadata form --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;doclib-simple-metadata&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;field-visibility&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_serial_number&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_status&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_id&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_code&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/field-visibility&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;edit-form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;template=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;../documentlibrary/forms/doclib-simple-metadata.ftl&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Document Library Inline Edit form --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;doclib-inline-edit&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;field-visibility&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_serial_number&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_status&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_id&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;show&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my:metadata_custom_code&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/field-visibility&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/forms&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/alfresco-config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;we have created new aspect with name my:cutomfieldsdata for linking aspect dynamically with content.
We have made these custom field searchable from alfresco share.
We have made these custom field inline editable on alfresco share.
We have made these custom field editable on alfresco share.
We have made these custom field visible on alfresco share.&lt;/p&gt;

&lt;h2&gt;How to make custom field searchable? &lt;a id=&quot;how-to-make-custom-filed-searchable&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;We have already done these filed searchable while creating new model within alfresco. We have created web-client-config-custom.xml file for searching custom field independently and use &lt;index enabled=&quot;true&quot;&gt; in model file for searcing custom field in full index search.&lt;/p&gt;

&lt;h2&gt;How to search document using CMIS query? &lt;a id=&quot;how-to-search-document-using-cmis-query&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;We are giving CMIS query for searching document using full index search where index is the keyword to search. If you want to get full CMIS code for creating session and searching document read our blog of Alfresco CMIS approach for building application within alfresco.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// full index search for the document using CMIS approach&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queryForDocument&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;SELECT cmis:objectId FROM cmis:document WHERE cmis:createdBy &amp;lt;&amp;gt; &amp;#39;System&amp;#39; AND CONTAINS(&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We are giving CMIS query for searching document using Custom Alfresco Document Meta Data search where serial_number is the serial number of document to search. If you want to get full CMIS code for creating session and searching document read our blog of Alfresco CMIS approach for building application within alfresco.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Query to fetch document with custom serial number field we added to meta data of document&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;SELECT d.cmis:objectId FROM cmis:document as d join my:cutomfieldsdata as m on d.cmis:objectId = m.cmis:objectId WHERE d.cmis:createdBy &amp;lt;&amp;gt; &amp;#39;System&amp;#39; m.my:metadata_custom_serial_number = &amp;#39;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serial_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;this query is to search for serial number only if you want to add more field to search you have to dynamically append it to the query string.&lt;/p&gt;

&lt;h2&gt;Complete example for dynamic CMIS query? &lt;a id=&quot;complete-example-of-dyanamic-cmis-query&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;We are multiple step involved in creating dynamic CMIS query first we have to find out how many search field are there in search form which are not blank(there can be other logic to for same problem).  &lt;/p&gt;

&lt;p&gt;For creating session and other task we have a complete blog on CMIS &lt;strong&gt;&lt;a href=&quot;http://blog.xebia.in/2015/02/12/playing-with-alfresco-repository-using-cmis/&quot;&gt; Playing with Alfresco repository using CMIS&lt;/a&gt;. &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SearchParameter Class created to retain search parameter object on dynamic search form. In this example we can have n number of parameter of type SearchParameter on search form.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SearchParameter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getOperator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setOperator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;operator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Method to create dynamic query based on SearchParameter list. This method return CMIS query string for getting Alfresco document objects from repository.&lt;/p&gt;

&lt;p&gt;One thing to notice is that our custom fields start with metadata_ so there should be way to identify default and custom fields in search form.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * Method use to create dynamic CMIS query according to the search form data&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * @param parameters&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * @return dynamic query string&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createDynamicQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SearchParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Initial query string&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;SELECT d.cmis:objectId FROM cmis:document as d join my:cutomfieldsdata as m on d.cmis:objectId = m.cmis:objectId WHERE d.cmis:createdBy &amp;lt;&amp;gt; &amp;#39;System&amp;#39; &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// In parameter map we have name and the exact value of the search parameter&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SearchParameter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchParameter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searchParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;metadata_&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searchParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOperator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equalsIgnoreCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;like&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; AND &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;m.my:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; like &amp;#39;%&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;%&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; AND &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;m.my:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; = &amp;#39;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searchParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOperator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equalsIgnoreCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;like&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; AND &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;d.cmis:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; like &amp;#39;%&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;%&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; AND &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;d.cmis:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; = &amp;#39;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://blog.xebia.in/tag/alfresco/&quot;&gt;For more hacks about alfresco visit&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 20 Nov 2014 00:00:00 +0530</pubDate>
        <link>/2014/11/20/alfresco-custom-field-search-in-cmis-approach/</link>
        <guid isPermaLink="true">/2014/11/20/alfresco-custom-field-search-in-cmis-approach/</guid>
        
        <category>alfesco</category>
        
        <category>cmis search</category>
        
        <category>custom metadata search</category>
        
        
      </item>
    
  </channel>
</rss>
