<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xebia Blog</title>
    <description>Thoughts on latest technologies</description>
    <link>http://xebia.com/</link>
    <atom:link href="http://xebia.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 26 Jan 2015 16:06:38 +0530</pubDate>
    <lastBuildDate>Mon, 26 Jan 2015 16:06:38 +0530</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Sql Over Hbase Using Apache Pheonix</title>
        <description>&lt;h1&gt;SQL over HBASE using Apache Phoenix&lt;/h1&gt;

&lt;p&gt;Hbase is a NoSQL column oriented database inspired from Google Big Table.. Since most of the queries related to analytics are more concentrated towards accessing all the queries in a table simultaneously, Hbase’s column oriented nature proves its worth in such cases.&lt;/p&gt;

&lt;p&gt;Hbase uses HDFS (Hadoop File System) to store its data.HDFS use helps Hbase to achieve features like scalability and fault tolerance out of the box.&lt;/p&gt;

&lt;p&gt;Hbase provides two features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Accessing the data in HDFS with a table approach.&lt;/li&gt;
&lt;li&gt;It provides transactiional behaviour to multi cluster setup.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information on Hbase, refer to :&lt;a href=&quot;http://xebee.xebia.in/index.php/2013/02/27/hbase-a-real-time-access-to-big-data/&quot;&gt;http://xebee.xebia.in/index.php/2013/02/27/hbase-a-real-time-access-to-big-data/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is long list  NoSql databases in market like Casaandra, MongoDb etc. For accessing the data residing in Cassandra, we have a SQL query like language CQL.The biggest advantage of using SQL is its widespread use since ages.BA and QA are quite use to writing SQL queries.&lt;/p&gt;

&lt;p&gt;That is the reason why CQL is quite famous among people who use Cassandra.For Hbase, we have few SQL drivers, which give a SQL type language to access data like - Apache Pheonix. Point to note here is that its just the SQL type language which is common, the way data is accessed in case of an RDBMS and Hbase or Cassandra is completely different.&lt;/p&gt;

&lt;p&gt;In this blog we are going to look at the way we can use Apache Phoenix to achieve SQL capabilities over Hbase.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Apache Phoenix?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Apache Phoenix provides an SQL driver over Hbase.Its a alternative client API which converts its SQL queries in Hbase calls i.e SQL into get,put and scan constructs of Hbase.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Phoenix-&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Give people an API they already know.&lt;/li&gt;
&lt;li&gt;Reducing the quantity of code.&lt;/li&gt;
&lt;li&gt;Optimized for fetching data- Provides facilities like- Aggregation,Skip scans etc&lt;/li&gt;
&lt;li&gt;It can use the existing tools- SQL client/terminal, OLAP engine&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Getting Started with Phoenix:-&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can download Apache Pheonix from the Apache Phoenix site( &lt;a href=&quot;http://phoenix.apache.org/download.html&quot;&gt;http://phoenix.apache.org/download.html&lt;/a&gt;) .There are many Phoenix versions available.Please read the Phoenix documentation before downloading Phoenix and make sure it is compatible with your currently used Hbase version.&lt;/p&gt;

&lt;p&gt;Once the Apache Phoenix is downloaded, unzip the tar file and you have to include the Phoenix jar files to Hbase region servers, so that we can establish a successful communication via Phoenix to Hbase.&lt;/p&gt;

&lt;p&gt;Note: If your Hbase is not compatible with Phoenix version, we will get an exception saying Client and Server jars are not compatible.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget http://apache.mirrors.hoobly.com/phoenix/phoenix-3.2.2/bin/phoenix-3.2.2-bin.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar -xvf phoenix-3.2.2-bin.tar.gz 
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;phoenix-3.2.2-bin/common
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cp phoenix-3.2.2-client-minimal.jar /usr/lib/hbase/lib/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cp phoenix-core-3.2.2.jar /usr/lib/hbase/lib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Phoenix comes up with a command line tool: sqlline (written in python).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/phoenix/phoenix-core-3.2.2/bin
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./psql.py localhost &amp;lt;sql-script A&amp;gt; &amp;lt;argument &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; the scrit A&amp;gt; &amp;lt;second-sql script B&amp;gt; &amp;lt;arguments forscript B&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;Script A:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;LOCATION&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOB&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;DATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEEID&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;INTEGER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEEID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguments for A:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Abhishek,Delhi,1984-01-01 01:01:01,1 Rakesh,Kolkata,1983-06-25 01:01:01,2 Jemin,Chennai,1990-11-25 01:01:01,3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Script B:&lt;/p&gt;

&lt;p&gt;Running Sample queries:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEEID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now using sqlline we can connect to Hbase:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./sqlline.py localhost &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;cloudera@localhost bin&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./sqlline.py localhost .. Connecting to jdbc:phoenix:localhost Driver: org.apache.phoenix.jdbc.PhoenixDriver &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;version 3.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Autocommit status: &lt;span class=&quot;nb&quot;&gt;true &lt;/span&gt;Transaction isolation: TRANSACTION_READ_COMMITTED .. Done sqlline version 1.1.2 0: jdbc:phoenix:localhost&amp;gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; count&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;*&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; from EMPLOYEE&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; +------------+ &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  COUNT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; +------------+ &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; +------------+ &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; row selected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.112 seconds&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0: jdbc:phoenix:localhost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Running Phoenix on AWS:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We can run Phoenix on AWS- EMR clusters.&lt;/p&gt;

&lt;p&gt;Step 1:Specify the Hadoop Version and choose Hbase in application to be installed.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;class&quot; src=&quot;http://xebee.xebia.in/wp-content/uploads/2015/01/1.png&quot; width=&quot;600&quot;&gt;&lt;/p&gt;

&lt;p&gt;Step 2: Specify the following in the Bootstrap portion of Cluster configuration.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;class&quot; src=&quot;http://xebee.xebia.in/wp-content/uploads/2015/01/2.png&quot; width=&quot;600&quot;&gt;&lt;/p&gt;

&lt;p&gt;Once the cluster is running, you can login to the master node using ssh and check your Phoenix configuration.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;class&quot; src=&quot;http://xebee.xebia.in/wp-content/uploads/2015/01/3.png&quot; width=&quot;600&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Operations not supported in Apache Phoenix:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Relational operators like - UNION,INTERSECT and MINUS is not supported.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Transactional support- It does not support and additional transactional capabilities other than what Hbase provides.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can also integrate Squirrel - SQL plugin with Apache Phoenix as well.&lt;/p&gt;

&lt;p&gt;All we need to do is to add appropriate driver on Squirrel client window.Using this we can easily query the Hbase database we use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Phoenix is actually been used in places where we want to hit the Hbase database using REST calls and the result of these REST calls are actually to be seen on some UI.&lt;/p&gt;

&lt;p&gt;Widespread knowledge of SQL increases the usefulness of Phoenix and related tools like CQL (in case of Cassandra) and Phoenix(in case of Hbase)&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Jan 2015 00:00:00 +0530</pubDate>
        <link>http://xebia.com/2015/01/02/sql-over-hbase-using-apache-pheonix/</link>
        <guid isPermaLink="true">http://xebia.com/2015/01/02/sql-over-hbase-using-apache-pheonix/</guid>
        
        
      </item>
    
      <item>
        <title>Useful Guidelines For Contributing To A Project Managed Using Git</title>
        <description>&lt;h1&gt;Useful Guidelines for Contributing to a Project Managed Using GIT&lt;/h1&gt;

&lt;p&gt;GIT is a popular and powerful open source version control system. In many respects it is ideal VCS if you are working in project with medium to large team size. These are a couple of useful guidelines for you if you are contributing in a project using GIT as VCS:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Create a branch for each logical change you are doing:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For each logical change of yours like fixing a bug or creating a new feature avoid using master branch and rather create a new branch. This will save you from reverting your changes and rebasing your master in case your changes do not make to master branch of the main project repo. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Base the code you are contributing against suitable branch:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Base your change against suitable branch, for example a new feature should ideally be rebased against master branch. A bug fix generally on maintenance branch, if the bug is reported from code of some branch not yet merge into master, base your change against that branch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Do not commit white spaces:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Most annoying change in a file on git repo are blank space, they mostly creep in because of the IDE codestyle settings. You can check you files for blank spaces introduced prior to commit using the command:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;git diff –check&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Make separate commits for logically separate changes:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For each logically separate change create a new commit. Committing together 5 small bug fixes in a commit or creating 5 different commits for a small new feature are not good idea. Logical and atomic commits help others to understand your change. They are also useful if you want to get rid of some specific code change at a later point.&lt;/p&gt;

&lt;p&gt;You might do frequent small commits in your branch that’s actually useful to keep your code changes safe, in that case it would be good idea to squash your commits and clean commit history before pushing your code to main repo so that everyone else gets a clean copy. But yes it is not recommended to change commit history after it is shared with others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Write useful and detailed commit message:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your commits should have a nice detailed message that explains the change. As a rule the first line should be a concise message not more than 50 letters, that should be followed by a blank line and a detailed message. The original format specified by Tim Pope is: &lt;/p&gt;

&lt;p&gt;&lt;em&gt;================================================================================&lt;/em&gt; _ Short (50 chars or less) summary of changes_&lt;/p&gt;

&lt;p&gt;&lt;em&gt;More detailed explanatory text, if necessary. Wrap it to&lt;/em&gt; _ about 72 characters or so. In some contexts, the first_ _ line is treated as the subject of an email and the rest of_ _ the text as the body. The blank line separating the_ _ summary from the body is critical (unless you omit the body_ _ entirely); tools like rebase can get confused if you run_ _ the two together._&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Further paragraphs come after blank lines.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Bullet points are okay, too&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Typically a hyphen or asterisk is used for the bullet,&lt;/em&gt; _ preceded by a single space, with blank lines in_ _ between, but conventions vary here_ _ ================================================================================_ Also take care to describe your changes in an imperative mode.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Contributing to a public project – Interactive rebasing and squashing to create clean PR:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are contributing your code to a public repo you may not have required permissions to directly update but will rather be submitting your changes to maintainers. A preferred way to contribute to such projects is to fork the code and then create a branch for doing changes. You can then create a pull request and submit it to maintainers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;git request-pull origin/master myfork&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Interactively rebase and squashing your commits prior to creating PR can be very helpful to create clean commits and keep project history clean.  It also helps to get rid for merge commits.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Dec 2014 00:00:00 +0530</pubDate>
        <link>http://xebia.com/2014/12/09/useful-guidelines-for-contributing-to-a-project-managed-using-git/</link>
        <guid isPermaLink="true">http://xebia.com/2014/12/09/useful-guidelines-for-contributing-to-a-project-managed-using-git/</guid>
        
        
      </item>
    
      <item>
        <title>How To Manage And Balance Huge Data Load For Big Kafka Clusters</title>
        <description>&lt;h1&gt;How to manage and balance &amp;quot;Huge Data Load&amp;quot; for Big Kafka Clusters&lt;/h1&gt;

&lt;h2&gt;1. Add Partition Tool&lt;/h2&gt;

&lt;p&gt;Partitions act as unit of parallelism. Messages of a single topic are distributed to multiple partitions that can be stored and served on different servers. Upon creation of a topic, the number of partitions for this topic has to be specified. Later on more partitions may be needed for this topic when the volume of this topic increases. This tool helps to add more partitions for a specific topic and also allow manual replica assignment of the added partitions. You can refer to the previous blog &lt;a href=&quot;http://xebee.xebia.in/index.php/2014/12/03/quick-steps-have-a-kafka-cluster-up-running-in-3-minutes/&quot;&gt;Quick steps : Have a Kafka Cluster Up &amp;amp; Running in 3 minutes&lt;/a&gt; to setup kafka cluster and create topics.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;bin/kafka-add-partitions.sh

Option                                                    Description \------                                                       ----------- \--partition &amp;lt;Integer: # of partitions&amp;gt;      REQUIRED: Number of partitions to add to the topic

\--replica-assignment-list                       For manually assigning replicas to &amp;lt;broker_id_for_part1_replica1 :            brokers for the new partitions broker_id_for_part1_replica2,              (default: ) broker_id_for_part2_replica1 : broker_id_for_part2_replica2, ...&amp;gt;

\--topic &amp;lt;topic&amp;gt;                                      REQUIRED: The topic for which partitions need to be added.

\--zookeeper &amp;lt;urls&amp;gt;                               REQUIRED: The connection string for the zookeeper connection in the form host:port. Multiple URLS can be given to allow fail-over.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2. Reassign Partitions Tool&lt;/h2&gt;

&lt;h3&gt;What does the tool do?&lt;/h3&gt;

&lt;p&gt;The goal of this tool is similar to the Referred Replica Leader Election Tool as to achieve load balance across brokers. But instead of only electing a new leader from the assigned replicas of a partition, this tool allows to change the assigned replicas of partitions – remember that followers also need to fetch from leaders in order to keep in sync, hence sometime only balance the leadership load is not enough.&lt;/p&gt;

&lt;p&gt;A summary of the steps that the tool does is shown below -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The tool updates the zookeeper path &amp;quot;/admin/reassign_partitions&amp;quot; with the list of topic partitions and (if specified in the Json file) the list of their new assigned replicas.&lt;/li&gt;
&lt;li&gt;The controller listens to the path above. When a data change update is triggered, the controller reads the list of topic partitions and their assigned replicas from zookeeper.&lt;/li&gt;
&lt;li&gt;For each topic partition, the controller does the following: 3.1. Start new replicas in RAR - AR (RAR = Reassigned Replicas, AR = original list of Assigned Replicas) 3.2. Wait until new replicas are in sync with the leader 3.3. If the leader is not in RAR, elect a new leader from RAR 3.4 4. Stop old replicas AR - RAR 3.5. Write new AR 3.6. Remove partition from the /admin/reassign_partitions path &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;How to use the tool?&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;bin/kafka-reassign-partitions.sh

bin/kafka-reassign-partitions.sh

Option                                                        Description \------                                                           ----------- \--broker-list &amp;lt;brokerlist&amp;gt;                            The list of brokers to which the partitions need to be reassigned in the form &amp;quot;0,1,2&amp;quot;. This is required for automatic topic reassignment. \--execute [execute]                                   This option does the actual reassignment. By default, the tool does a dry run \--manual-assignment-json-file &amp;lt;manual    The JSON file with the list of manual assignment json file path&amp;gt;                       reassignmentsThis option or topics- to-move-json-file needs to be specified. The format to use is - {&amp;quot;partitions&amp;quot;: [{&amp;quot;topic&amp;quot;: &amp;quot;foo&amp;quot;, &amp;quot;partition&amp;quot;: 1, &amp;quot;replicas&amp;quot;: [1,2,3] }], &amp;quot;version&amp;quot;:1 } \--topics-to-move-json-file &amp;lt;topics to        The JSON file with the list of topics reassign json file path&amp;gt;                         to reassign.This option or manual- assignment-json-file needs to be specified. The format to use is - {&amp;quot;topics&amp;quot;: [{&amp;quot;topic&amp;quot;: &amp;quot;foo&amp;quot;},{&amp;quot;topic&amp;quot;: &amp;quot;foo1&amp;quot;}], &amp;quot;version&amp;quot;:1 } \--zookeeper &amp;lt;urls&amp;gt;                                REQUIRED: The connection string for the zookeeper connection in the form host:port. Multiple URLS can be given to allow fail-over. 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3.  Add Brokers(Cluster Expansion)&lt;/h2&gt;

&lt;p&gt;Cluster expansion involves including brokers with new broker ids in a Kafka 08 cluster. Typically, when you add new brokers to a cluster, they will not receive any data from existing topics until this tool is run to assign existing topics/partitions to the new brokers. The tool allows 2 options to make it easier to move some topics in bulk to the new brokers. These 2 options are a) topics to move b) list of newly added brokers. Using these 2 options, the tool automatically figures out the placements of partitions for the topics on the new brokers.&lt;/p&gt;

&lt;p&gt;The following example moves 2 topics (foo1, foo2) to newly added brokers in a cluster (5,6,7).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; ./bin/kafka-reassign-partitions.sh --topics-to-move-json-file topics-to-move.json --broker-list &amp;quot;5,6,7&amp;quot; \--execute

&amp;gt;  cat topics-to-move.json {&amp;quot;topics&amp;quot;: [{&amp;quot;topic&amp;quot;: &amp;quot;foo1&amp;quot;},{&amp;quot;topic&amp;quot;: &amp;quot;foo2&amp;quot;}], &amp;quot;version&amp;quot;:1 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;strong&gt;Selectively moving some partitions to a broker&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The partition movement tool can also be moved to selectively move some replicas for certain partitions over to a particular broker. Typically, if you end up with an unbalanced cluster, you can use the tool in this mode to selectively move partitions around. In this mode, the tool takes a single file which has a list of partitions to move and the replicas that each of those partitions should be assigned to.&lt;/p&gt;

&lt;p&gt;The following example moves 1 partition (foo-1) from replicas 1,2,3 to 1,2,4&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; ./bin/kafka-reassign-partitions.sh --manual-assignment-json-file partitions-to-move.json --execute

&amp;gt; cat partitions-to-move.json {&amp;quot;partitions&amp;quot;: [{&amp;quot;topic&amp;quot;: &amp;quot;foo&amp;quot;, &amp;quot;partition&amp;quot;: 1, &amp;quot;replicas&amp;quot;: [1,2,4] }], }], &amp;quot;version&amp;quot;:1 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;** : **These tools are available in version 0.8 , not prior versions.&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Dec 2014 00:00:00 +0530</pubDate>
        <link>http://xebia.com/2014/12/04/how-to-manage-and-balance-huge-data-load-for-big-kafka-clusters/</link>
        <guid isPermaLink="true">http://xebia.com/2014/12/04/how-to-manage-and-balance-huge-data-load-for-big-kafka-clusters/</guid>
        
        
      </item>
    
      <item>
        <title>Quick Steps Have A Kafka Cluster Up Running In 3 Minutes</title>
        <description>&lt;h1&gt;Quick steps : Have a Kafka Cluster Up &amp;amp; Running in 3 minutes&lt;/h1&gt;

&lt;h1&gt;Introduction&lt;/h1&gt;

&lt;p&gt;For beginners to understand, kafka is nothing but a messaging system which is distributed and partitioned across brokers, having its data replicated, so as to provide the scalability and fault tolerance. For advanced configuration and tools to manage data load , please read &lt;a href=&quot;http://xebee.xebia.in/index.php/2014/12/04/how-to-manage-and-balance-huge-data-load-for-big-kafka-clusters/&quot;&gt;How to manage and balance “Huge Data Load” for Big Kafka Clusters&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;Terminology&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Topic&lt;/strong&gt;: Category associated with each message, known as &amp;quot;Topic&amp;quot; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Broker&lt;/strong&gt;: Cluster has servers, known as &amp;quot;Brokers&amp;quot;. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Producer&lt;/strong&gt;: Processes which publish message to brokers. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Consumer&lt;/strong&gt;: Processes which are subscribed to topics in the cluster and process the published messages.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;Steps&lt;/h1&gt;

&lt;h5&gt;1.  Download the kafka and untar it. (Latest stable release is 0.8.1.1 and 0.8.2 is in beta)&lt;/h5&gt;

&lt;p&gt;Click to &lt;a href=&quot;https://www.apache.org/dyn/closer.cgi?path=/kafka/0.8.1.1/kafka_2.9.2-0.8.1.1.tgz&quot; title=&quot;Download&quot;&gt;Download&lt;/a&gt; from mirror sites.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ tar -xzf kafka_2.9.2-0.8.1.1.tgz

$ cd kafka_2.9.2-0.8.1.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;2.  Start zookeeper server.&lt;/h5&gt;

&lt;p&gt;Here we are starting the zookeeper which comes bundled with kafka. you may also use a  standalone zookeeper cluster with odd number of nodes and then point the kafka brokers to this zookeeper cluster. For production environment , do not use the bundled zookeeper.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ bin/zookeeper-server-start.sh config/zookeeper.properties
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;3.  Start the kafka servers(brokers).&lt;/h5&gt;

&lt;p&gt;Here we are setting up 3 broker cluster. so we will be having 3 different server.properties files corresponding to each broker.&lt;/p&gt;

&lt;p&gt;you can copy the server.properties file and change the broker ids, log directory and port in the copied files. These 3 configuration properties must be unique to all the brokers which are on same machine. When you are using multiple machines and having one broker on one machine. you need to have only &amp;quot;broker.id&amp;quot; as unique. Ports and log directory need not be unique then. On same machine, if these parameters are same, overriding will happen. &lt;/p&gt;

&lt;h6&gt;      A. Copy the server.properties files&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ cp config/server.properties config/server-1.properties cp config/server.properties config/server-2.properties
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For server.properties, we already have :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ broker.id=0 port=9092 log.dir=/tmp/kafka-logs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;      B. Edit the two new files :&lt;/h6&gt;

&lt;p&gt;config/server-1.properties:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ broker.id=1 port=9093 log.dir=/tmp/kafka-logs-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;config/server-2.properties:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ broker.id=2 port=9094 log.dir=/tmp/kafka-logs-2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;        C. Start all 3 brokers.&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ bin/kafka-server-start.sh config/server.properties &amp;amp; bin/kafka-server-start.sh config/server-1.properties &amp;amp; bin/kafka-server-start.sh config/server-2.properties &amp;amp; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;4. Create a topic&lt;/h5&gt;

&lt;p&gt;You may specify replication factor and partitions per topic, else default values from properties file will be used. Topic name must be there in creation command. Once topic is created as per requirements of partitioning and replication , cluster is ready to receive and send the messages from producers and consumers.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 9 --topic test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we have specified 9 partitions , it will create 9 directories 0-8 numbered on each broker , as replication factor is 3. &lt;/p&gt;

&lt;h5&gt;5. Produce sample messages from command Line&lt;/h5&gt;

&lt;h6&gt;        A. Run Producer&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we have specified the one broker , which will be contacted first and further zookeeper will co-ordinate to find out on which broker to put the message , as it has complete list of brokers registered to it. &lt;/p&gt;

&lt;h6&gt;     B. Send Some messages&lt;/h6&gt;

&lt;p&gt;This is message 1 on test topic.&lt;/p&gt;

&lt;p&gt;This is message 2 on test topic.&lt;/p&gt;

&lt;p&gt;We have sent the messages to the broker, which will be stored in partitions for the test topic. &lt;/p&gt;

&lt;h5&gt;6. Consume the sample messages.&lt;/h5&gt;

&lt;h6&gt;      A. Run the Consumer.&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : Use different terminal for producer and consumer so as to get better understanding.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ bin/kafka-console-consumer.sh --zookeeper localhost:2181 --from-beginning --topic test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As and when command executes, it consumes messages from test topic , from beginning . If we do not specify &amp;quot;--from-beginning&amp;quot; parameter, consumer will consume only the messages produced after the consumer is running.&lt;/p&gt;

&lt;p&gt;Here Response is the list of messages on the broker. &lt;/p&gt;

&lt;h6&gt;      B. Response&lt;/h6&gt;

&lt;p&gt;This is message 1 on test topic.&lt;/p&gt;

&lt;p&gt;This is message 2 on test topic&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : You have to kill the consumer(^C) yourself , else it will keep running and waiting for the messages to be consumed. You can verify it by sending new messages if you have producer open in other terminal.&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Dec 2014 00:00:00 +0530</pubDate>
        <link>http://xebia.com/2014/12/03/quick-steps-have-a-kafka-cluster-up-running-in-3-minutes/</link>
        <guid isPermaLink="true">http://xebia.com/2014/12/03/quick-steps-have-a-kafka-cluster-up-running-in-3-minutes/</guid>
        
        
      </item>
    
      <item>
        <title>Customizing Angular Directives</title>
        <description>&lt;h1&gt;Customizing Angular Directives&lt;/h1&gt;

&lt;p&gt;While developing Angular Application we have a obvious choice of using third party directives. Most of the time these directive are suffice to handle all the use cases. But situation may occur when you feel that there is really something missing to fulfill your Specific problem. Common practice is to add your own custom directive along with the directive, you want to use in the element. But It sounds quite weired to Have two directives to solve the same problem. Hence we might have to think of some different way.&lt;/p&gt;

&lt;p&gt;In this Post i will share one of the Scenerio in above said category and solution to that of-course.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let us take an example of uibootstrap datepicker-popup directive to show the datepicker. This directive can be used in HTML like this&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; [input type=&amp;quot;text&amp;quot; class=&amp;quot;form-control&amp;quot; datepicker-popup=&amp;quot;&amp;quot; 
      ng-model=&amp;quot;date&amp;quot; data-show-button-bar=&amp;quot;false&amp;quot; data-datepicker-mode =&amp;quot;mode&amp;quot; is-open=&amp;quot;opened&amp;quot; close-text=&amp;quot;Close&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will do pretty much all the jobs one can expect from the date picker. As per the requirements you can add more options available with this directive. You might use this date picker in several places across your application. Most of the time you will find same configuration. For this you will be repeating the same piece of code again and again. I don&amp;#39;t really like this and sure you as well.&lt;/p&gt;

&lt;p&gt;There is one more scenario. Your back end API gives you date in different format than what you have to display in the GUI and similarly you have to send back to API in different format. For this we have to first change the date string to date before passing to the directive. And also change the date before sending back to back end API. Again you are going to do it in every controller managing the HTML.&lt;/p&gt;

&lt;p&gt;To handle both the above cases we can write a custom directive that will internally use the datepicker-popup directive. We will provide all the options in custom directive and then this can be used every where else.&lt;/p&gt;

&lt;p&gt;Here is the example&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;directive(&amp;#39;CustomDatepicker&amp;#39;, function ($compile, $filter) {
         return {
             restrict: &amp;#39;A&amp;#39;,
             scope   : {
                   CustomDatepicker: &amp;quot;=&amp;quot;
             },
             link    : function ($scope, element) {
               $scope.mode = &amp;quot;year&amp;quot;;
               var timestamp = Date.parse($scope.CustomDatepicker);
               if (!isNaN(timestamp)) {
                   $scope.date = new Date(timestamp);
               }

               element.attr(&amp;#39;data-datepicker-popup&amp;#39;, &amp;quot;dd-MM-yyyy&amp;quot;);
               element.attr(&amp;#39;data-ng-model&amp;#39;, &amp;#39;date&amp;#39;);
               element.attr(&amp;#39;data-is-open&amp;#39;, &amp;#39;datePicker.open&amp;#39;);
               element.attr(&amp;#39;data-show-button-bar&amp;#39;, false);
               element.attr(&amp;#39;data-ng-click&amp;#39;, &amp;#39;datePicker.open = true&amp;#39;);
               element.attr(&amp;#39;data-datepicker-mode&amp;#39;, &amp;#39;mode&amp;#39;);
               element.removeAttr(&amp;quot;data-custom-datepicker&amp;quot;);
               $scope.$evalAsync(function (scope) {
                   $compile(element)(scope);
             });

             $scope.$watch(&amp;#39;date&amp;#39;, function () {
               if ($scope.date) {
                   $scope.customDatepicker = $filter(&amp;#39;date&amp;#39;)($scope.date, &amp;quot;yyyy-MM-dd&amp;quot;);
               }
             });

         }
        };
      });
    });
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the custom directive i have defined the scope variable customDatepicker that holds the date value as received by your controller. Now change this date string to proper date &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;var timestamp = Date.parse($scope.customDatepicker);
if (!isNaN(timestamp)) {
$scope.date = new Date(timestamp);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we will add datepicker and all of the other options that we needed. This can be done using attr method of the element. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;element.attr(&amp;#39;data-datepicker-popup&amp;#39;, &amp;quot;dd-MM-yyyy&amp;quot;);
element.attr(&amp;#39;data-ng-model&amp;#39;, &amp;#39;date&amp;#39;);
element.attr(&amp;#39;data-is-open&amp;#39;, &amp;#39;datePicker.open&amp;#39;);
element.attr(&amp;#39;data-show-button-bar&amp;#39;, false);
element.attr(&amp;#39;data-ng-click&amp;#39;, &amp;#39;datePicker.open = true&amp;#39;);
element.attr(&amp;#39;data-datepicker-mode&amp;#39;, &amp;#39;mode&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remove custom-datepicker as it is no longer needed. element.removeAttr(&amp;quot;data-custom-datepicker&amp;quot;); to apply the DOM changes in the link function add following lines &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$scope.$evalAsync(function (scope) {
$compile(element)(scope);
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;it will update the DOM in next digest cycle. Finally as we have bind different scope variable with the date picker, our original scope variable remain unchanged. So we need this to be updated . To achieve this we will add watch on date And update the customDatepicker whenever date will be changed &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$scope.$watch(&amp;#39;date&amp;#39;, function () {
if ($scope.date) {
$scope.customDatepicker = $filter(&amp;#39;date&amp;#39;)($scope.date, &amp;quot;yyyy-MM-dd&amp;quot;);
}
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the HTML we just have to add following code &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[input type=&amp;quot;text&amp;quot; data-custom-datepicker=&amp;quot;input.date&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will implicitly add date-picker and all the associated options.Also you need not to worry for the date format in every controller. Date format that will be displayed is dd-MM-yyyy and the output format will be yyyy-MM-dd. Similarly you can customize your other directives as well. Happy coding....&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Nov 2014 00:00:00 +0530</pubDate>
        <link>http://xebia.com/2014/11/26/customizing-angular-directives/</link>
        <guid isPermaLink="true">http://xebia.com/2014/11/26/customizing-angular-directives/</guid>
        
        
      </item>
    
      <item>
        <title>Alfresco Working With Aspects In Cmis</title>
        <description>&lt;h1&gt;Alfresco working with aspects in CMIS&lt;/h1&gt;

&lt;p&gt;Alfresco is one of the most popular and widely used open source content management system.&lt;/p&gt;

&lt;p&gt;Alfresco comes in both enterprise and community version. At the time of writing this blog latest version for &lt;strong&gt;Enterprise&lt;/strong&gt; edition is &lt;strong&gt;4.2.3.1&lt;/strong&gt;. At the time of writing this blog latest version for &lt;strong&gt;Community&lt;/strong&gt; edition is &lt;strong&gt;5.0.b&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Before starting with this blog all should be familiar with CMIS and how to use CMIS along with alfresco. For getting started with CMIS with alfresco and other content repository you must first read our blog on&lt;strong&gt;&lt;a href=&quot;http://xebee.xebia.in/?p=19243&amp;amp;preview=true&quot;&gt; Alfresco working with CMIS (File, Folder and Search operation)&lt;/a&gt;. &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First of all what is aspects?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Aspects most likely related to content modeling in Alfresco which itself is one of the biggest feature of the alfresco system. Aspects as the like the additional information that we can dynamically attach to any content within the alfresco repository. Aspects scan be linked to the content individually to add aspect properties to the content or can be called within or used within the types in alfresco content model to add the properties that aspect is holding.&lt;/li&gt;
&lt;li&gt;Alfresco comes with many aspects by default we can create our own aspects as per requirement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why aspects are used?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Aspects basically used to add dynamicity to the content modelling in alfresco means aspects can be dynamically added and removed from the content or folder within the alfresco repository. Aspects are much like the super class in java which are used by its sub classes to add all the functionality that super class holding. &lt;/p&gt;

&lt;p&gt;Before starting how to use aspects in alfresco using CMIS we must be aware about how to create aspects in alfresco this we have already done in our previous blog *&lt;em&gt;&lt;strong&gt;[Alfresco&lt;/strong&gt; custom field search in CMIS approach**]&lt;a href=&quot;http://xebee.xebia.in/index.php/2014/11/20/alfresco-custom-field-search-in-cmis-approach/&quot;&gt;2&lt;/a&gt;.&lt;/em&gt;* **&lt;/p&gt;

&lt;p&gt;For using alfresco aspects in CMIS we have to use alfresco-opencmis-extension-0.3.jar along with CMIS library for content repository access.&lt;/p&gt;

&lt;p&gt;First we have to create session that can be used to access aspects and apply aspects to the new content if not already having that aspect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Creating alfresco session CMIS : &lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;// default factory implementation SessionFactory factory = SessionFactoryImpl.newInstance(); // map to contain connection parameter any cmis repository using atom pub Map&amp;lt;String, String&amp;gt; parameter = new HashMap&amp;lt;String, String&amp;gt;(); parameter.put(SessionParameter.USER, &amp;quot;admin&amp;quot;); parameter.put(SessionParameter.PASSWORD, &amp;quot;admin&amp;quot;); parameter.put(SessionParameter.ATOMPUB_URL, &amp;quot;http://localhost:9090/alfresco/service/cmis&amp;quot;); parameter.put(SessionParameter.BINDING_TYPE, BindingType.ATOMPUB.value()); parameter.put(SessionParameter.REPOSITORY_ID, &amp;quot;6fc907f9-6790-46b5-9c25-d6855ff8ff5c&amp;quot;); parameter.put(SessionParameter.OBJECT_FACTORY_CLASS, &amp;quot;org.alfresco.cmis.client.impl.AlfrescoObjectFactoryImpl&amp;quot;); // getting Instance from User Credential try { // create session Session session = factory.createSession(parameter); } catch (Exception e) { e.printStackTrace(); } } 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we have passed one more parameter in parameter map during session creation&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;parameter.put(SessionParameter.OBJECT_FACTORY_CLASS, &amp;quot;org.alfresco.cmis.client.impl.AlfrescoObjectFactoryImpl&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to deal with aspects, alfrescoDocument or AlfrescoFolder etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Get the existing folder object it can be AlfrescoFolder or cmis Folder object.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;try{ OperationContext context = session.createOperationContext(); context.setRenditionFilterString(&amp;quot;cmis:thumbnail&amp;quot;); Folder cmisFolder = (Folder) session.getObjectByPath(&amp;quot;/&amp;quot;, context); }catch (Exception e){ e.printStackTrace(); } 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can either create the new folder and create new document within that folder or use existing folder for document creation. But make sure that user creating document must have access to that particular folder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Creating document in the existing folder.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;// Setting properties for new document to be created within repository Map&amp;lt;String, Object&amp;gt; propertiesDocument = new HashMap&amp;lt;String, Object&amp;gt;(); propertiesDocument.put(PropertyIds.NAME, &amp;quot;test_Aspect.pdf&amp;quot;); propertiesDocument.put(PropertyIds.OBJECT_TYPE_ID, &amp;quot;cmis:document&amp;quot;); FileInputStream oInputStream = new FileInputStream(&amp;quot;/home/sourabh/Desktop/test_aspects.pdf&amp;quot;); // Reading the content in Bytes stream and Writing it to new file in ContentStream contentStream = new ContentStreamImpl(&amp;quot;test_Aspect.pdf&amp;quot;, null, &amp;quot;application/pdf&amp;quot;, oInputStream); // creating document with name title and description Document document = folder.createDocument(propertiesDocument, contentStream, VersioningState.MAJOR); 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now new document is uploaded with name test_aspects.pdf in the root directory. You  can get complete detail for the document uploaded from the document object.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Check for aspect whether applied to new document or not if no apply custom aspect to document created.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For this we have to first convert CMIS Document to AlfrescoDocument object then we have add aspect for that document.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;// converting cmis document to alfresco document AlfrescoDocument alfrescoDocument = (AlfrescoDocument) document; if (!alfrescoDocument.hasAspect(&amp;quot;P:my:cutomfieldsdata&amp;quot;)) { // adding custom meta data type aspect to document alfrescoDocument.addAspect(&amp;quot;P:my:cutomfieldsdata&amp;quot;); // Setting properties for new document to be created within repository Map&amp;lt;String, Object&amp;gt; customPropertiesDocument = new HashMap&amp;lt;String, Object&amp;gt;(); // Set agreement serial number customPropertiesDocument.put(&amp;quot;my:metadata_custom_serial_number&amp;quot;, &amp;quot;serial number&amp;quot;); customPropertiesDocument.put(&amp;quot;my:metadata_custom_status&amp;quot;, &amp;quot;status&amp;quot;); customPropertiesDocument.put(&amp;quot;my:metadata_custom_id&amp;quot;, &amp;quot;id&amp;quot;); customPropertiesDocument.put(&amp;quot;my:metadata_custom_name&amp;quot;, &amp;quot;name&amp;quot;); customPropertiesDocument.put(&amp;quot;my:metadata_custom_code&amp;quot;, &amp;quot;code&amp;quot;);

// updating the document with the new meta data fields CmisObject updatedDoucment = alfrescoDocument.updateProperties(customPropertiesDocument); System.out.println(&amp;quot;document&amp;quot; + updatedDoucment.getName() + &amp;quot; successfully updated&amp;quot;); } else{ System.out.println(&amp;quot;document already updated&amp;quot;); }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Document is updated with our custom aspect we can add already defined aspects also to the document.&lt;/p&gt;

&lt;p&gt;In this we have checked whether our custom aspects is already linked with document or not if not then add custom aspect to document and then update custom properties for document.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://xebee.xebia.in/index.php/tag/alfresco/&quot;&gt;For more hacks about alfresco visit&lt;/a&gt;..................&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Nov 2014 00:00:00 +0530</pubDate>
        <link>http://xebia.com/2014/11/26/alfresco-working-with-aspects-in-cmis/</link>
        <guid isPermaLink="true">http://xebia.com/2014/11/26/alfresco-working-with-aspects-in-cmis/</guid>
        
        
      </item>
    
      <item>
        <title>Alfresco Custom Field Search In Cmis Approach</title>
        <description>&lt;h1&gt;Alfresco custom field search in CMIS approach.&lt;/h1&gt;

&lt;p&gt;Before starting with alfresco custom field search in CMIS I like to tell you about few thing.&lt;/p&gt;

&lt;p&gt;What is cmis? How cmis works? How to create custom model in alfresco? How to make custom field searchable? How to search document in cmis using lucene query?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. What is cmis?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Cmis stands for content management interoperatibility service. CMIS is an open stands for accessing content repository given by OASIS.&lt;/p&gt;

&lt;p&gt;There are set of rules or restriction enforced by CMIS for accessing CMIS compitable repository.&lt;/p&gt;

&lt;p&gt;Alfresco alfresco support the CMIS standard for accessing the content repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. How cmis works?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are set of binding that CMIS provide to bind session with CMIS compitable repository. 1. Local session binding. 2. Atom pub binding. 3. Web service binding.&lt;/p&gt;

&lt;p&gt;After getting session using user name and password or user token user can get, upload and manupilate content to which he/she is authorized.&lt;/p&gt;

&lt;p&gt;User can create new content, upload new content, edit content, delete content, accociate or update metadata with perticular content within the CMIS compitable repository.&lt;/p&gt;

&lt;p&gt;There are some limitation when you are working with custom fields and aspects as these are not accessible threw apache cmis librey we have to use alresco open cmis libreary to get additional functionality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. How to create custom model in alfresco?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now this is an practicle example to create an custom model within alfresco. For creating custom model in alfresco in community version we need to create two file one is cutom model file and other is context file which contain registory for custom model these two files are mandatory for creating new model there are other files too which are created based on needs.&lt;/p&gt;

&lt;p&gt;There are two ways of creating new model in alfresco one is by using aspects and other is by using types. We are using the aspects for each the new model in alfresco as aspects are dynamic and reusable while types are not resuable component.&lt;/p&gt;

&lt;p&gt;First we will start with creating new model for which we need some files create these files with names:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;myCustomFields-model.xml&lt;/li&gt;
&lt;li&gt;myCustomFields-model-context.xml&lt;/li&gt;
&lt;li&gt;&lt;p&gt;web-client-config-custom.xml paste them under alfresco/tomcat/shared/classes/alfresco/extension&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;myCustomFields.properties paste it under alfresco/tomcat/shared/classes/alfresco/messages&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;custom-slingshot-application-context.xml&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;share-config-custom.xml paste them under alfresco/tomcat/shared/classes/alfresco/web-extension&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;myCustomFields-model.xml should contain following content:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;!-- Definition of Knowledge Base Model --&amp;gt; &amp;lt;model name=&amp;quot;my:model&amp;quot; xmlns=&amp;quot;http://www.alfresco.org/model/dictionary/1.0&amp;quot;&amp;gt; &amp;lt;!-- Optional meta-data about the model --&amp;gt; &amp;lt;description&amp;gt;Knowledge Base Model&amp;lt;/description&amp;gt; &amp;lt;author&amp;gt;Will Abson&amp;lt;/author&amp;gt; &amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt; &amp;lt;!-- Imports are required to allow references to definitions in other models --&amp;gt; &amp;lt;imports&amp;gt; &amp;lt;!-- Import Alfresco Dictionary Definitions --&amp;gt; &amp;lt;import uri=&amp;quot;http://www.alfresco.org/model/dictionary/1.0&amp;quot; prefix=&amp;quot;d&amp;quot;/&amp;gt; &amp;lt;!-- Import Alfresco Content Domain Model Definitions --&amp;gt; &amp;lt;import uri=&amp;quot;http://www.alfresco.org/model/content/1.0&amp;quot; prefix=&amp;quot;cm&amp;quot;/&amp;gt; &amp;lt;/imports&amp;gt; &amp;lt;!-- Introduction of new namespaces defined by this model --&amp;gt; &amp;lt;namespaces&amp;gt; &amp;lt;namespace uri=&amp;quot;my.model&amp;quot; prefix=&amp;quot;my&amp;quot;/&amp;gt; &amp;lt;/namespaces&amp;gt; &amp;lt;aspects&amp;gt; &amp;lt;!-- Definition of new Content Aspect: Knowledge Base Document --&amp;gt; &amp;lt;aspect name=&amp;quot;my:cutomfieldsdata&amp;quot;&amp;gt; &amp;lt;title&amp;gt;my custom model&amp;lt;/title&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;property name=&amp;quot;my:metadata_custom_serial_number&amp;quot;&amp;gt; &amp;lt;type&amp;gt;d:text&amp;lt;/type&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property name=&amp;quot;my:metadata_custom_status&amp;quot;&amp;gt; &amp;lt;type&amp;gt;d:text&amp;lt;/type&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property name=&amp;quot;my:metadata_custom_id&amp;quot;&amp;gt; &amp;lt;type&amp;gt;d:text&amp;lt;/type&amp;gt; &amp;lt;multiple&amp;gt;true&amp;lt;/multiple&amp;gt; &amp;lt;index enabled=&amp;quot;true&amp;quot;&amp;gt; &amp;lt;tokenised&amp;gt;true&amp;lt;/tokenised&amp;gt; &amp;lt;/index&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property name=&amp;quot;my:metadata_custom_name&amp;quot;&amp;gt; &amp;lt;type&amp;gt;d:text&amp;lt;/type&amp;gt; &amp;lt;multiple&amp;gt;true&amp;lt;/multiple&amp;gt; &amp;lt;index enabled=&amp;quot;true&amp;quot;&amp;gt; &amp;lt;tokenised&amp;gt;true&amp;lt;/tokenised&amp;gt; &amp;lt;/index&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property name=&amp;quot;my:metadata_custom_code&amp;quot;&amp;gt; &amp;lt;type&amp;gt;d:text&amp;lt;/type&amp;gt; &amp;lt;multiple&amp;gt;true&amp;lt;/multiple&amp;gt; &amp;lt;index enabled=&amp;quot;true&amp;quot;&amp;gt; &amp;lt;tokenised&amp;gt;true&amp;lt;/tokenised&amp;gt; &amp;lt;/index&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;/aspect&amp;gt; &amp;lt;/aspects&amp;gt; &amp;lt;/model&amp;gt;&lt;/code&gt; We used property &lt;index enabled=&quot;true&quot;&gt; which make field searchable in full index search. Property &lt;multiple&gt;true&lt;/multiple&gt; is used to contain multiple field within one field in comma separated form for now you can remove this.&lt;/p&gt;

&lt;p&gt;myCustomFields-model-context.xml should contain following content:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39;?&amp;gt; &amp;lt;!DOCTYPE beans PUBLIC &amp;#39;-//SPRING//DTD BEAN//EN&amp;#39; &amp;#39;http://www.springframework.org/dtd/spring-beans.dtd&amp;#39;&amp;gt; &amp;lt;beans&amp;gt; &amp;lt;!-- Registration of new models --&amp;gt; &amp;lt;bean id=&amp;quot;extension.kb.dictionaryBootstrap&amp;quot; parent=&amp;quot;dictionaryModelBootstrap&amp;quot; depends-on=&amp;quot;dictionaryBootstrap&amp;quot;&amp;gt; &amp;lt;property name=&amp;quot;models&amp;quot;&amp;gt; &amp;lt;list&amp;gt; &amp;lt;value&amp;gt;alfresco/extension/myCustomFields-model.xml&amp;lt;/value&amp;gt; &amp;lt;/list&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;/bean&amp;gt; &amp;lt;bean id=&amp;quot;extension.kb.resourceBundle&amp;quot; class=&amp;quot;org.alfresco.i18n.ResourceBundleBootstrapComponent&amp;quot;&amp;gt; &amp;lt;property name=&amp;quot;resourceBundles&amp;quot;&amp;gt; &amp;lt;list&amp;gt; &amp;lt;value&amp;gt;alfresco.messages.myCustomFields&amp;lt;/value&amp;gt; &amp;lt;/list&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;/bean&amp;gt; &amp;lt;/beans&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;web-client-config-custom.xml should contain following content:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;alfresco-config&amp;gt; &amp;lt;config evaluator=&amp;quot;string-compare&amp;quot; condition=&amp;quot;Advanced Search&amp;quot;&amp;gt; &amp;lt;advanced-search&amp;gt; &amp;lt;content-types&amp;gt; &amp;lt;/content-types&amp;gt; &amp;lt;folder-types&amp;gt; &amp;lt;/folder-types&amp;gt; &amp;lt;custom-properties&amp;gt; &amp;lt;meta-data aspect=&amp;quot;my:cutomfieldsdata&amp;quot; property=&amp;quot;my:metadata_custom_serial_number&amp;quot; /&amp;gt; &amp;lt;meta-data aspect=&amp;quot;my:cutomfieldsdata&amp;quot; property=&amp;quot;my:metadata_custom_status&amp;quot; /&amp;gt; &amp;lt;meta-data aspect=&amp;quot;my:cutomfieldsdata&amp;quot; property=&amp;quot;my:metadata_custom_id&amp;quot; /&amp;gt; &amp;lt;meta-data aspect=&amp;quot;my:cutomfieldsdata&amp;quot; property=&amp;quot;my:metadata_custom_name&amp;quot; /&amp;gt; &amp;lt;meta-data aspect=&amp;quot;my:cutomfieldsdata&amp;quot; property=&amp;quot;my:metadata_custom_code&amp;quot; /&amp;gt; &amp;lt;/custom-properties&amp;gt; &amp;lt;/advanced-search&amp;gt; &amp;lt;/config&amp;gt; &amp;lt;/alfresco-config&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;this file is use to make each field in model searchable can ne used in alfresco advanced search and cmis field search.&lt;/p&gt;

&lt;p&gt;myCustomFields.properties should contain following content:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;my_model.property.my_metadata_custom_serial_number.title=Serial Number my_model.property.my_metadata_custom_status.title=Status my_model.property.my_metadata_custom_id.title=Document ID my_model.property.my_metadata_custom_name.title=Name my_model.property.my_metadata_custom_code.title=Code&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;custom-slingshot-application-context.xml should contain following content:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39;?&amp;gt; &amp;lt;beans xmlns=&amp;quot;http://www.springframework.org/schema/beans&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xmlns:hz=&amp;quot;http://www.hazelcast.com/schema/config&amp;quot; xsi:schemaLocation=&amp;quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.hazelcast.com/schema/config http://www.hazelcast.com/schema/config/hazelcast-spring.xsd&amp;quot;&amp;gt; &amp;lt;!-- Add Knowledge Base messages --&amp;gt; &amp;lt;bean id=&amp;quot;webscripts.kb.resources&amp;quot; class=&amp;quot;org.springframework.extensions.surf.util.ResourceBundleBootstrapComponent&amp;quot;&amp;gt; &amp;lt;property name=&amp;quot;resourceBundles&amp;quot;&amp;gt; &amp;lt;list&amp;gt; &amp;lt;value&amp;gt;alfresco.messages.myCustomFields&amp;lt;/value&amp;gt; &amp;lt;/list&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;/bean&amp;gt; &amp;lt;/beans&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This property file is to access field property title on alfresco share.&lt;/p&gt;

&lt;p&gt;share-config-custom.xml should contain following content: `&lt;alfresco-config&gt; &amp;lt;!-- Repository Library config section --&amp;gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 20 Nov 2014 00:00:00 +0530</pubDate>
        <link>http://xebia.com/2014/11/20/alfresco-custom-field-search-in-cmis-approach/</link>
        <guid isPermaLink="true">http://xebia.com/2014/11/20/alfresco-custom-field-search-in-cmis-approach/</guid>
        
        
      </item>
    
      <item>
        <title>Mobile App Automation Android And Ios App Automation Via One Test Case Using Appium</title>
        <description>&lt;h1&gt;Mobile App Automation: Android and iOS app automation via one Test Case using Appium&lt;/h1&gt;

&lt;p&gt;Agenda of this blog is to come up with a solution to use only one test case and execute it on both android and iOS. Lets first focus on why we would need something like this.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;First Lets try to answer why Organisations launch their apps on multiple platforms. Reason is:&lt;/em&gt; When an Organisation plans to launch an app, their main objective is to reach out to maximum users. So they decide to launch their apps on most popular platforms. iOS and Android are two most popular platform today.Thats the main reason why organisation simultaneously develop and launch apps on both platforms.&lt;/p&gt;

&lt;p&gt;Now Lets focus on what it means for Mobile Dev and Mobile Test Teams.Dev teams can decide either of the following options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Start development of iOS and android separately and have two teams do this.&lt;/li&gt;
&lt;li&gt;Decide to use cross platform app development tools to write only one piece of code and deploy it on both android and iOS.  
Both options has their own pros and cons but one main benefit of option 2 is, it results in drastically reduced development time and budget. ( Some of you may not agree with this, but this is not the main agenda of this blog)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Now can Test Teams also follow option 2&lt;/strong&gt; ???&lt;/em&gt; So that test time and budget required for automating both apps is not 200%. This was the question that was hovering in mind from a long time. So i decided to give it a try to find a solution.&lt;/p&gt;

&lt;p&gt;Lets try to understand whats needed to automate either a website or a mobile app. Irrespective of the tool used, we need to have these two facilities available to us: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How to find an element&lt;/li&gt;
&lt;li&gt;How to interact with an element 
So whats the Solution. Solution is to find a tool that can give us both of these for both the platforms. Thus only tool that can be used here is - &lt;em&gt;&lt;strong&gt;&lt;a href=&quot;http://appium.io/&quot;&gt;Appium&lt;/a&gt;&lt;/strong&gt;(No points for guessing)&lt;/em&gt;. The main advantage of Appium is that its supports multiple platforms: Android, iOS and firefox. Our solution lies in to understand how Appium supports multiple platforms. To understand &amp;quot;how Appium supports multiple platforms&amp;quot;, we need to understand Appium&amp;#39;s architecture. Please observe the below image carefully.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[caption id=&amp;quot;&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;1019&amp;quot;]&lt;img src=&quot;http://unmesh.files.wordpress.com/2013/02/photo-1.jpg&quot; alt=&quot;&quot;&gt; Appium Architecture ( Source: http://unmesh.files.wordpress.com/2013/02/photo-1.jpg)[/caption]&lt;/p&gt;

&lt;p&gt;Let me quote some text from Appium&amp;#39;s Documentation: &lt;em&gt;&amp;quot;Appium is at its heart a webserver that exposes a REST API. It receives connections from a client, listens for commands, executes those commands on a mobile device, and responds with an HTTP response representing the result of the command execution. The fact that we have a client/server architecture opens up a lot of possibilities:&amp;quot;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When we start appium, we pass some desired capabilities to appium session, which basically tells appium to start  either android or iOS session. For example, if i pass desired capabilities like &amp;quot;platformName&amp;quot; ==&amp;quot;iOS&amp;quot;, &amp;quot;deviceName&amp;quot;==&amp;quot;iPhone Simulator&amp;quot; or &amp;quot;platformName&amp;quot; ==&amp;quot;Android&amp;quot;, &amp;quot;deviceName&amp;quot;==&amp;quot;Android Emulator&amp;quot; then appium would start iOS and android session respectively.&lt;/p&gt;

&lt;p&gt;Now when we run a test case, depending on which appium session we have started, all the commands passed to Appium Server will be converted to that platform&amp;#39;s UI Automation native commands. This is how multiple platforms are supported.&lt;/p&gt;

&lt;p&gt;Simple!! isn&amp;#39;t it?? :-)&lt;/p&gt;

&lt;p&gt;Now Lets see how Appium helps us in achieving the point 2 mentioned above. Since Appium extends Selenium Webdriver so interaction with elements is independent of the platform. For Example a button will be a button on android and iOS both and the function to interact with a button is .click() irrespective of platform. similarly for textbox, the function is .sendKeys() on both platforms.&lt;/p&gt;

&lt;p&gt;So the only point left is point 1. Here Appium cant help us much because how we find elements is dependent on platform. On iOS, locators used are Name and Xpath and for Android locators used are id and ClassName etc. This issue was resolved with the help of framework where depending on which platform we want to automate, we loaded the required locators at run time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;We created two .properties files and all the locators specific to one platform were stored in one property file and specific to other were stored in other property file. Based on for which platform we want to execute the test for, locators from one of the feature files are loaded.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Lets go through the Framework and understand how we do this. Here is the tech stack for this framework:&lt;/p&gt;

&lt;p&gt;Ant ( Build Tool), Java ( Programming Language), Appium(Automation Tool), TestNG(Test Framework) and Page Objects (Test Design Pattern)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In build.xml, apart from defining normal TestNG specific tasks and targets, we have defined two targets run-test-android and run-test-iOS which not only runs android and iOS test suits but also sets the value of variable &amp;quot;Browser&amp;quot; to android and iOS respectively.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/build.xml1_-300x242.png&quot; alt=&quot;build.xml1&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/build.xml2_-300x158.png&quot; alt=&quot;build.xml2&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/build.xml3_-300x79.png&quot; alt=&quot;build.xml3&quot;&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;DriverFactory.java, once ant target is executed in command line , as per TestNG, control will come to function tagged with @BeforeSuite. In this function, first i check the value of system property &amp;quot;Browser&amp;quot; that was being set in build.xml. if it is android or iOS, Appium Server server session is started accordingly.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/DriverFactory1-300x145.png&quot; alt=&quot;DriverFactory1&quot;&gt; &lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/DriverFactory2-300x207.png&quot; alt=&quot;DriverFactory2&quot;&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Next Step is Page Objects. We have defined a page object for each page of our mobile app. But there is a twist in the constructor. Here also in the constructor i check the value of system property &amp;quot;Browser&amp;quot; that was being set in build.xml. if it is android or iOS, locators from properties files are loaded accordingly.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/PageObject1-300x269.png&quot; alt=&quot;PageObject1&quot;&gt; &lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/PageObject2-300x116.png&quot; alt=&quot;PageObject2&quot;&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Nov 2014 00:00:00 +0530</pubDate>
        <link>http://xebia.com/2014/11/16/mobile-app-automation-android-and-ios-app-automation-via-one-test-case-using-appium/</link>
        <guid isPermaLink="true">http://xebia.com/2014/11/16/mobile-app-automation-android-and-ios-app-automation-via-one-test-case-using-appium/</guid>
        
        
      </item>
    
      <item>
        <title>Robot Framework Ride</title>
        <description>&lt;h1&gt;ROBOT Framework &amp;amp; RIDE&lt;/h1&gt;

&lt;h2&gt;&lt;strong&gt;What is Robot Framework?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;•It’s a general test automation framework(open source from Nokia and hosted on Google)&lt;/p&gt;

&lt;p&gt;•Focus of automation is generally on acceptance tests.&lt;/p&gt;

&lt;p&gt;•Uses a Keyword driven automation approach&lt;/p&gt;

&lt;p&gt;•Testing capabilities can be extended using Python or Java&lt;/p&gt;

&lt;p&gt;•Can create tests in natural language for ease of understanding. &lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Keyword Driven approach&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;•Higher-level keywords: Those are really testing a concrete aspect of the business logic of the system under test.&lt;/p&gt;

&lt;p&gt;•Lower-level keywords: To keep the implementation of the higher-level keywords at a decent size one is often breaking down the required functionality to several lower-level keywords.&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_19124&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;453&amp;quot;]&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/RF_Keyword_Approach.png&quot; alt=&quot;Keyword Approach&quot;&gt; RF Keyword Approach[/caption] &lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/RF_Architecture.png&quot; alt=&quot;RF_Architecture&quot;&gt;&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Installation- Steps&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Installation step of Python&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1.Install Python 2.x using the windows MSI installer:&lt;a href=&quot;http://www.python.org/download/&quot;&gt;http://www.python.org/download/&lt;/a&gt; (because Robot Framework only support python 2.x version. Robot Framework is currently not compatible with Python 3.x versions)&lt;/p&gt;

&lt;p&gt;2.After installation check in the Environment settings for “path”. If python script path not exists then append the following path&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open Start &amp;gt; Settings &amp;gt; Control Panel &amp;gt; System &amp;gt; Advanced &amp;gt; Environment Variables. There are User variables and System variables and the difference between them is that User variables affect only the current users, whereas System variables affect all users.&lt;/li&gt;
&lt;li&gt;To edit existing PATH, select Edit and add ;&lt;InterpreterInstallationDir&gt;;&lt;InterpreterInstallationDir&gt;\Scripts\ at the end of the value. Note that the leading colon (;) is important, as it separates different entries. To add a new value, select New and provide both the name and the value, this time without the leading colon.  &lt;/li&gt;
&lt;li&gt;Start a new command prompt for the changes to effect. 
&lt;strong&gt;Installation step of Robot Framework&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.Using PIP:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install PIP: download the “get-pip.py” file from&lt;a href=&quot;https://bootstrap.pypa.io/get-pip.py&quot;&gt;https://bootstrap.pypa.io/get-pip.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open command prompt go to the directory where the #a file downloaded. E.g. cd c:\main\downloads&lt;/li&gt;
&lt;li&gt;After that hit the command: python get-pip.py&lt;/li&gt;
&lt;li&gt;After pip installation hit the following command in cmd to install robot framework:&lt;/li&gt;
&lt;li&gt;“&lt;em&gt;pip install robotframework&lt;/em&gt;”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2 .Another way is to get the Robot Framework source code by downloading the source distribution from following location:&lt;a href=&quot;https://pypi.python.org/pypi/robotframework&quot;&gt;https://pypi.python.org/pypi/robotframework&lt;/a&gt;   or&lt;a href=&quot;https://github.com/robotframework/robotframework&quot;&gt;https://github.com/robotframework/robotframework&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First download the source code &lt;/li&gt;
&lt;li&gt;Open command prompt go to the directory where the #a file downloaded. E.g. cd c:\main\downloads &lt;/li&gt;
&lt;li&gt;After that hit the command: python setup.py install
&lt;strong&gt;Installation step of RIDE:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;****To install RIDE below things should installed before” &lt;/p&gt;

&lt;p&gt;1.Python&lt;/p&gt;

&lt;p&gt;2.Wxpython&lt;/p&gt;

&lt;p&gt;3.Robot Framework&lt;/p&gt;

&lt;p&gt;Steps for Python and Robot Framework are already present in the document and for Wxpython follow the below steps:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation of wxpython&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;For windows: &lt;a href=&quot;http://sourceforge.net/projects/wxpython/files/wxPython/2.8.12.1/&quot;&gt;http&lt;/a&gt;&lt;a href=&quot;http://sourceforge.net/projects/wxpython/files/wxPython/2.8.12.1/&quot;&gt;://sourceforge.net/projects/wxpython/files/wxPython/2.8.12.1/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Installation Instruction for RIDE:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;On windows download the executable site from &lt;a href=&quot;https://code.google.com/p/robotframework-ride/downloads/list&quot;&gt;https&lt;/a&gt;&lt;a href=&quot;https://code.google.com/p/robotframework-ride/downloads/list&quot;&gt;://code.google.com/p/robotframework-ride/downloads/list&lt;/a&gt;   and install it&lt;/li&gt;
&lt;li&gt;Alternative way to install using the pip command : “pip install robotframework-ride” &lt;/li&gt;
&lt;li&gt;Another way is to download the source code from :&lt;a href=&quot;https://pypi.python.org/pypi/robotframework-ride&quot;&gt;https://pypi.python.org/pypi/robotframework-ride&lt;/a&gt;   and use the command : python setup.py install&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To open the Ride just open the cmd and hit the command “ride.py” or just call the same command on run(win+r). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Introduction To RIDE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Robot Framework IDE (RIDE) is the integrated development environment to implement automated tests for the Robot Framework. &lt;em&gt;How to open RIDE&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type ride.py in start menu of system and press enter&lt;/li&gt;
&lt;li&gt;Double click on RIDE shortcut(if created while installation)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;strong&gt;Test Libraries&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Test libraries contain those lowest-level keywords, often called library keywords, which actually interact with the system under test. All test cases always use keywords from some library, often through higher-level user keywords.&lt;/p&gt;

&lt;p&gt;Different Types of Libraries available &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Standard Libraries&lt;/li&gt;
&lt;li&gt;External Libraries
&lt;em&gt;&lt;strong&gt;Standard Libraries&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some test libraries are distributed with Robot Framework and these libraries are called standard libraries. These are the available standard libraries: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://robotframework.googlecode.com/hg/doc/userguide/RobotFrameworkUserGuide.html?r=2.7.6#builtin-library&quot;&gt;BuiltIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://robotframework.googlecode.com/hg/doc/userguide/RobotFrameworkUserGuide.html?r=2.7.6#operatingsystem-library&quot;&gt;OperatingSystem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 11 Nov 2014 00:00:00 +0530</pubDate>
        <link>http://xebia.com/2014/11/11/robot-framework-ride/</link>
        <guid isPermaLink="true">http://xebia.com/2014/11/11/robot-framework-ride/</guid>
        
        
      </item>
    
      <item>
        <title>Mongodb Integrate Robot Frameworkride</title>
        <description>&lt;h1&gt;MongoDB with Robot Framework(RIDE)&lt;/h1&gt;

&lt;h3&gt;Installation instruction of MongoDB on Windows&lt;/h3&gt;

&lt;p&gt;There are three different version of MongoDB for Windows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Windows 64-bit&lt;/li&gt;
&lt;li&gt;Windows 32-bit&lt;/li&gt;
&lt;li&gt;Windows Server 2008&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To find which version of Windows you have, use the following command in the cmd: &lt;strong&gt;“wmic os get osarchitecture”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Download the MongoDB from following location as per your OS Architecture:&lt;br&gt;
&lt;a href=&quot;http://www.mongodb.org/downloads?_ga=1.99989726.1358002168.1411966340&quot;&gt;http://www.mongodb.org/downloads?_ga=1.99989726.1358002168.1411966340&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Set up the MongoDB environment&lt;/h3&gt;

&lt;p&gt;After the installation of MongoDB on system it requires “DBPATH” so that it can use to run the Mongodb services.&lt;/p&gt;

&lt;p&gt;Create a directory where to store the dbs name. Example: In cmd hit the following command&lt;br&gt;
C:\Program Files\MongoDB &amp;gt; md \data\db (Default location)&lt;/p&gt;

&lt;p&gt;Or for any location give the path and create the directory. For example:  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;mkdir D:\data\db (user defined location)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now start the MongoDB server on the desire dpPath&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;For default location&lt;/em&gt; - C:\Program Files\MongoDB\bin\mongod.exe&lt;/li&gt;
&lt;li&gt;&lt;em&gt;For user defined location&lt;/em&gt; - C:\Program Files\MongoDB\bin\mongod.exe --dbpath D:\data\db&lt;/li&gt;
&lt;li&gt;If your path includes spaces, enclose the entire path in double quotes. For example:&lt;br&gt;
C:\mongodb\bin\mongod.exe --dbpath &amp;quot;d:\test\mongo db data&amp;quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Mongod.exe&lt;/strong&gt; is the file to start the MongoDB server on the default host &amp;amp; port(host:- localhost &amp;amp; port : - 27017&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mongo.exe&lt;/strong&gt; is an interactive interface to MongoDB, which provides a powerful interface for users to test queries and operations directly with the database.&lt;/p&gt;

&lt;h3&gt;Create a DB in mongoDB:&lt;/h3&gt;

&lt;p&gt;Start the mongo to interact with Mongo Data bases. Command on cmd: c:\Program File\MongoDb\bin\mongo.exe&lt;br&gt;
&lt;img src=&quot;https://lh3.googleusercontent.com/Hb8dvKM_9v-TbTaJf4WHeSYeLOKTvz4FNIf99HOAr8cT_G8BxAyTazeakWNfJrrkgYa6YiNXFXKTuPMJi5wLV7ptp_6mSUtVQoyC90wbHyyhO8vDL95gwHEASK31aR4xqD4S&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Before creating a new DB first check how many db present on the path. Command:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;shows dbs&lt;br&gt;
&lt;img src=&quot;https://lh3.googleusercontent.com/v6mdWZp9s1uB2aO7IO3jRfPiQHRNqvfhJm9LI38FfmbOk1lecu8uZuRYnHqoJ77-LsEDNoA0lXVB8B-OMF8oTnnt8xfz8Be0eFI6iLslwzdMEp_AWTTKJzoWDNu0B7H-o-2T&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;use &lt;new-DBName&gt; (E.g. use sampledb). Note: At that time it does not save the DB.&lt;/li&gt;
&lt;li&gt;Insert a document into a collection&lt;br&gt;
a. Create a document – command : a = {x : “Learning DB” }&lt;br&gt;
b. Insert in “TEST” collection. Command : db.TEST.insert(a). Remember TEST is also a new collection which too create automatically once insert the document into it.&lt;br&gt;
c. Check db using command: show dbs. It will show new db also in the list i.e. “sampled”. Note: After inserting a document in any collection then it automatically save collection and DB.&lt;img src=&quot;https://lh4.googleusercontent.com/DfM1Y6-jKFlBQRRl8NvqRPGp9y_LUnbOD4mQellW__9Dix3Kw0e4FdtwI7kzb-j2pqwaWyPkjLplMFAIXfKGiIwsvUljh2d2pOyLKRIXBiBWGITBvqZuO6zmsu3H0S4rKsGU&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Integrate MongoDB with RIDE&lt;/h3&gt;

&lt;p&gt;There is an external library exist of MongoDB for robot framework. The prerequisite to integrate the MongoDB library with RF(Robot Framework) is that “pymongo” library should be installed.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Installation Instruction for pymongo&lt;br&gt;
a. Using pip: &lt;em&gt;“pip install pymongo”&lt;/em&gt;&lt;br&gt;
b. Alternative way is download the source code of &lt;a href=&quot;https://pypi.python.org/pypi/pymongo/&quot;&gt;pymongo &lt;/a&gt;and use the command : &lt;em&gt;“python setup.py install”&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Installation Instruction for MongoDBLibrary&lt;br&gt;
a. Using pip: &lt;em&gt;“pip install robotframework-MongoDBLibrary”&lt;/em&gt;&lt;br&gt;
b. Alternative way is to download the source code of &lt;a href=&quot;https://github.com/iPlantCollaborativeOpenSource/Robotframework-MongoDB-Library&quot;&gt;MongoDBLibrary &lt;/a&gt;and use the command: &lt;em&gt;“python setup.py install”&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After installation of both include the library in RIDE&lt;br&gt;
Steps to perform the same:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open ride using the command ride.py&lt;/li&gt;
&lt;li&gt;Create new project from FIle option → New Project as Directory&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now select the folder go to “settings”&lt;br&gt;
&lt;img src=&quot;https://lh3.googleusercontent.com/MLFXvFM0xqLfaDdsq72TZJQlWubPOFJPnSVeZrODFZcQZTKVzqTKs5kU_eClyAejqUucYEZAeuHB2PInGFAjpdTyJKf5GWk9WySFhILlN3eX0s4nz0yRZid23r94y4sPdQ&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Under setting click on Library button and enter the mongoDB library name i.e. “MongoDBLibrary”&lt;br&gt;
&lt;img src=&quot;https://lh6.googleusercontent.com/ZnBaX8YqJoHWvo_k91V_ZebZMEyqFMqA-awFejPRV_k1u7sJ_72lYjfQhM1L1Mnu8NSqudVipkB25WtbMEAQGZT_lD2f9K100KvK92Oxq0suRVeBtl1hXaTkzz7Q875UTA&quot; alt=&quot;&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After click ok it will look like:&lt;br&gt;
&lt;img src=&quot;https://lh4.googleusercontent.com/s0VlVAplhiZFuyrFClQyevFDdqsv9uBKT5MaRecBd0eXyL4MqBzrl5I7y018G3oOVzgYOUpynEA1V5utJRZlNPmc3ll82GMlAoVwUQRzXCXdizFWHAw395dNRfjfz019rg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note: 1. It is Case sensitive&lt;br&gt;
2. If name comes in Red Color thats means its not imported correctly in RIDE.&lt;br&gt;
For example change the case of library name from “MongoDBLibrary” to “mongoDBLibrary” then it will show like:&lt;br&gt;
&lt;img src=&quot;https://lh3.googleusercontent.com/dFAbVsDpY7Buh0cGPeRt39OZjbp8n2uFSjFDbb6DrXtpYbLcNOuw9-QRH009zeD9LGi8XciOxYUXl1NOXEGWz0gcClwdEzSB9zF5sc5yi_AXIX6ZULLoZqk2hTPEvd6s5g&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;After importing the MongoDB library check that all the related function/keywords are coming are not. For that follow the below steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After importing click F5 key. It will open the search keyword dialog.&lt;/li&gt;
&lt;li&gt;Under the dialog box there is source dropdown. Open it and it will show the list of library associated with project. Check it should have “MongoDBLibrary” and select it.&lt;br&gt;
&lt;img src=&quot;https://lh4.googleusercontent.com/YKdU1VqGoYMbK1x9df-ri3aqAsFI2v7Xe8QGLdoAWnAQu0zGyiT0Y-GPLpuuqqSMx7FmqP9SC7UxIZBs3qOa1xjplxlj_O1MWPXOwrOE-H-TrJZkMikdNrY6N2TzNQ6_HA&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now use the keywords in your test cases.&lt;/p&gt;

&lt;h3&gt;MongoDB Keywords:&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Keyword&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Connect To Mongodb&lt;/em&gt;
dbHost=localhost, dbPort=27017, dbMaxPoolSize=10, dbNetworkTimeout=None, dbDocClass=&lt;type &#39;dict&#39;&gt;, dbTZAware=False
Loads pymongo and connects to the MongoDB host.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disconnect From Mongodb&lt;/em&gt;
NA
Disconnect mongoDB server&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Drop Mongodb Collection&lt;/em&gt;
dbName, dbCollName
Delete the mention collection from the mention DB&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Drop Mongodb Database&lt;/em&gt;
dbDelName
Delete the mention DB from the current DBPath from which is connected.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Get Mongodb Collection Count&lt;/em&gt;
dbName, dbCollName
Returns the number of records from the mention collection.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Get Mongodb Collections&lt;/em&gt;
dbName
Returns the list of collections from the mention DB&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Get Mongodb Databases&lt;/em&gt;
NA
Returns the list of Data bases from the current connected DB&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Remove Mongodb Records&lt;/em&gt;
dbName, dbCollName, recordJSON
Remove some of the records from the specified collection as based on the JSON entered.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Retrieve All Mongodb Records&lt;/em&gt;
dbName, dbCollName, returnDocuments=False
Return all the mongoDB records from the specified collection&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Retrieve Mongodb Records With Desired Fields&lt;/em&gt;
dbName, dbCollName, recordJSON, fields, return**id=True, returnDocuments=False
Returns number of records on the basis of field mention from the specified collection&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Retrieve Some Mongodb Records&lt;/em&gt;
dbName, dbCollName, recordJSON, returnDocuments=False
Returns number of records on the basis of JSON entered in the specified collection&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Save Mongodb Records&lt;/em&gt;
dbName, dbCollName, recordJSON
Used to save new record or update existing record from the specified DB collection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example of Using MongoDB keywords in RIDE:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Prerequisite&lt;/strong&gt; : Start &lt;/p&gt;

&lt;p&gt;Cheaper. I came it &lt;a href=&quot;http://tuxwearhouseweddings.com/rergh/levitra-brand-pills-for-sale&quot;&gt;levitra brand pills for sale&lt;/a&gt; the not buy hair &lt;a href=&quot;http://shopglean.com/loijx/flowmax-without-prescription&quot;&gt;flowmax without prescription&lt;/a&gt; 6 longer servings &lt;a href=&quot;http://www.penickvillagefoundation.org/jhpm/trental-400-mg-retailer&quot;&gt;http://www.penickvillagefoundation.org/jhpm/trental-400-mg-retailer&lt;/a&gt; soft plastic had. My little &lt;a href=&quot;http://securefuturesil.com/lnqjx/walmart-viagra-prices-walmart-pharmacy/&quot;&gt;walmart viagra prices walmart pharmacy&lt;/a&gt; lotion. I it it. Hard. Never &lt;a href=&quot;http://www.bryancwatkins.com/idnl/generic-seroquel-online&quot;&gt;http://www.bryancwatkins.com/idnl/generic-seroquel-online&lt;/a&gt; Around time &lt;a href=&quot;http://www.bryancwatkins.com/idnl/almased-turbo-diet-forum&quot;&gt;almased turbo diet forum&lt;/a&gt; naturally once &lt;a href=&quot;http://www.southsideheating.com/bhtr/cialis-1-to-2-days-shipping&quot;&gt;cialis 1 to 2 days shipping&lt;/a&gt; it my almost &lt;a href=&quot;http://shopglean.com/loijx/buy-soft-generic-viagra&quot;&gt;http://shopglean.com/loijx/buy-soft-generic-viagra&lt;/a&gt; long fragrance. I &lt;a href=&quot;http://ravenmccoyphotography.com/exwsk/novaldex-pay-by-paypal/&quot;&gt;novaldex pay by paypal&lt;/a&gt; I and cloying days &lt;a href=&quot;http://freeofpain.org/azf/buy-aldactone-no-rx-overnight-shipping.html&quot;&gt;buy aldactone no rx overnight shipping&lt;/a&gt; bought hope always on &lt;a href=&quot;http://tuxwearhouseweddings.com/rergh/levitra-without-prescription-walmart&quot;&gt;levitra without prescription walmart&lt;/a&gt; all a for.&lt;/p&gt;

&lt;p&gt;the Mongo DB server on the defined DB path. For example check the below snapshot: &lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/StartMongoServer.jpg&quot; alt=&quot;StartMongoServer&quot;&gt;&lt;/p&gt;

&lt;p&gt;Open RIDE using command on cmd: ride.py&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/MongoResult-1024x949.jpg&quot; alt=&quot;MongoResult&quot;&gt;&lt;/p&gt;

&lt;h3&gt;How to create any New Library of Robot&lt;/h3&gt;

&lt;p&gt;The Simplest way of creating user defined library for Robot Framework:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a python file with function/s and save it with extension .py in Lib\site-packages&lt;/li&gt;
&lt;li&gt;Open ride → Go to the Test Suite → Open Setting → Add a Library with the file name&lt;/li&gt;
&lt;li&gt;After entering the name check it should not show in red.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example:&lt;br&gt;
Create a python file with basic function like:&lt;br&gt;
def play_Robot():&lt;br&gt;
print &amp;quot;Pressed Play Robot Button&amp;quot;&lt;/p&gt;

&lt;p&gt;save it with any name which treat as Library Name in Robot Framework. For above let save it as “ReusableModule.py”&lt;br&gt;
Open Ride and add the Library with name “ReusableModule”&lt;br&gt;
&lt;img src=&quot;https://lh3.googleusercontent.com/CvZVIty6MyF2lExD0NP13m8975jyLCSgyqlqfPQBy2hw1CajV5qt9Et2KWR_C-ku3jv_XkSPl6C6PLhTxqukXiHJZ9vmua8gGzF7NV6UDAmFqXNPOeM-yXr-q5HaobA25A&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Now in test case use the functions mention in own defined library.&lt;/p&gt;

&lt;h3&gt;How to create user defined keywords of MongoDB Library&lt;/h3&gt;

&lt;p&gt;First go the location where default MongoDBLibrary installed. On windows by default location is &lt;PythonPath&gt;\Lib\site-packages. Generally the path is : &amp;quot;C:\Python27\Lib\site-packages&amp;quot;&lt;br&gt;
Open MongoDBLibrary directory, it shows mainly 4 files:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;init&lt;/strong&gt;.py&lt;/li&gt;
&lt;li&gt;mongo&lt;em&gt;connection&lt;/em&gt;manager.py&lt;/li&gt;
&lt;li&gt;mongoquery.py&lt;/li&gt;
&lt;li&gt;version.py&lt;br&gt;
Might also have there compiled files too.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now to create user defined function create a new python file and import following library to start creating functions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;import pymongo&lt;/li&gt;
&lt;li&gt;from pymongo import MongoClient&lt;/li&gt;
&lt;li&gt;import json&lt;/li&gt;
&lt;li&gt;from bson.objectid import ObjectId&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After that create a function as shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/MongoDBUserDefinedFunction.jpg&quot; alt=&quot;MongoDBUserDefinedFunction&quot;&gt;&lt;/p&gt;

&lt;p&gt;Now Open **init__.py file and import the user defined library in it:&lt;br&gt;
&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/MongoDBUserDefinedFunctionIntegrate.jpg&quot; alt=&quot;MongoDBUserDefinedFunctionIntegrate&quot;&gt;&lt;/p&gt;

&lt;p&gt;Now open Ride import *&lt;em&gt;MongoDBLibrary *&lt;/em&gt;and look under the function list:&lt;br&gt;
&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/UserDefinedKeywordInList.jpg&quot; alt=&quot;UserDefinedKeywordInList&quot;&gt;&lt;/p&gt;

&lt;p&gt;And we can the use the created keyword like:&lt;br&gt;
&lt;img src=&quot;http://xebee.xebia.in/wp-content/uploads/2014/11/UserDefinedKeyword.jpg&quot; alt=&quot;UserDefinedKeyword&quot;&gt;&lt;/p&gt;

&lt;p&gt;I hope it will be helpful to integrate MongoDB with Robot Framework.&lt;br&gt;
Happy Testing!!&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Nov 2014 00:00:00 +0530</pubDate>
        <link>http://xebia.com/2014/11/11/mongodb-integrate-robot-frameworkride/</link>
        <guid isPermaLink="true">http://xebia.com/2014/11/11/mongodb-integrate-robot-frameworkride/</guid>
        
        
      </item>
    
  </channel>
</rss>
